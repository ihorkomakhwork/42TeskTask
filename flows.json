[
    {
        "id": "412669072e03744e",
        "type": "tab",
        "label": "/aliases",
        "disabled": false,
        "info": ""
    },
    {
        "id": "0127f0442eaff100",
        "type": "tab",
        "label": "/transactions",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "75217cfbf0795720",
        "type": "tab",
        "label": "Flow 1",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "dfabc4eb4e54cb9a",
        "type": "tab",
        "label": "Flow 2",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "e5a93a558b3c6776",
        "type": "tab",
        "label": "Onboarding",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "2fc48cc339f00e42",
        "type": "tab",
        "label": "Error handler",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "42f285c336936ac1",
        "type": "tab",
        "label": "Miscellaneous",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "3d8368539d02f074",
        "type": "subflow",
        "name": "json schema validator",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 40,
                "y": 80,
                "wires": [
                    {
                        "id": "9e44cfa7fa94eaa0"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 680,
                "y": 80,
                "wires": [
                    {
                        "id": "9e44cfa7fa94eaa0",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "schema",
                "type": "json",
                "value": "{}",
                "ui": {
                    "icon": "font-awesome/fa-list-alt",
                    "type": "input",
                    "opts": {
                        "types": [
                            "json"
                        ]
                    }
                }
            }
        ],
        "meta": {},
        "color": "#3FADB5",
        "icon": "node-red/parser-json.svg"
    },
    {
        "id": "d70e53f04ea4219d",
        "type": "subflow",
        "name": "error handler",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 100,
                "y": 260,
                "wires": [
                    {
                        "id": "ef363de3347b746e"
                    }
                ]
            }
        ],
        "out": [],
        "env": [],
        "meta": {},
        "color": "#eb6363",
        "icon": "font-awesome/fa-warning"
    },
    {
        "id": "a19c35db171e7c08",
        "type": "subflow",
        "name": "visa api",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 140,
                "y": 140,
                "wires": [
                    {
                        "id": "f30d1578157685b0"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 900,
                "y": 140,
                "wires": [
                    {
                        "id": "c6801ec5417f1bb9",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "resource",
                "type": "str",
                "value": ""
            },
            {
                "name": "method",
                "type": "str",
                "value": "POST"
            },
            {
                "name": "query",
                "type": "str",
                "value": ""
            }
        ],
        "meta": {},
        "color": "#359df3",
        "icon": "font-awesome/fa-credit-card"
    },
    {
        "id": "0efdf64f7eaaebed",
        "type": "tls-config",
        "name": "",
        "cert": "",
        "key": "",
        "ca": "",
        "certname": "cert.pem",
        "keyname": "key_ca90416a-50ec-47f3-9a5d-f6f8e2b2d22c.pem",
        "caname": "",
        "servername": "",
        "verifyservercert": false,
        "alpnprotocol": ""
    },
    {
        "id": "84e59769f7f05b82",
        "type": "tls-config",
        "name": "visa_config",
        "cert": "${VISA_AUTH_CERT}",
        "key": "${VISA_AUTH_PRIVATE_KEY}",
        "ca": "",
        "certname": "",
        "keyname": "",
        "caname": "",
        "servername": "",
        "verifyservercert": false,
        "alpnprotocol": ""
    },
    {
        "id": "9e44cfa7fa94eaa0",
        "type": "function",
        "z": "3d8368539d02f074",
        "name": "alias validation",
        "func": "const ajv = new Ajv({ strict: false});\n\nconst schema = env.get('schema');\nconst validate = ajv.compile(schema);\n\nif (validate(msg.payload)) return msg;\nnode.warn(validate.errors);\nnode.error(`Invalid massge`, msg);",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "Ajv",
                "module": "ajv"
            }
        ],
        "x": 320,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "51d088d99949334d",
        "type": "switch",
        "z": "d70e53f04ea4219d",
        "name": "",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "400",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "404",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "500",
                "vt": "str"
            },
            {
                "t": "null"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 4,
        "x": 970,
        "y": 340,
        "wires": [
            [
                "ddcc4203cdae4bab"
            ],
            [
                "034531df60d423c1"
            ],
            [
                "adad5243ec9d9eeb"
            ],
            [
                "adad5243ec9d9eeb"
            ]
        ]
    },
    {
        "id": "ddcc4203cdae4bab",
        "type": "http response",
        "z": "d70e53f04ea4219d",
        "name": "",
        "statusCode": "400",
        "headers": {},
        "x": 1220,
        "y": 240,
        "wires": []
    },
    {
        "id": "034531df60d423c1",
        "type": "http response",
        "z": "d70e53f04ea4219d",
        "name": "",
        "statusCode": "404",
        "headers": {},
        "x": 1180,
        "y": 320,
        "wires": []
    },
    {
        "id": "adad5243ec9d9eeb",
        "type": "http response",
        "z": "d70e53f04ea4219d",
        "name": "",
        "statusCode": "500",
        "headers": {},
        "x": 1180,
        "y": 420,
        "wires": []
    },
    {
        "id": "ef363de3347b746e",
        "type": "switch",
        "z": "d70e53f04ea4219d",
        "name": "type error",
        "property": "triggered",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "undefined",
                "vt": "jsonata"
            },
            {
                "t": "true"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 340,
        "y": 260,
        "wires": [
            [
                "471897e05182350b"
            ],
            [
                "5ef5d304bde5933a"
            ]
        ]
    },
    {
        "id": "5ef5d304bde5933a",
        "type": "change",
        "z": "d70e53f04ea4219d",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 620,
        "y": 320,
        "wires": [
            [
                "0f49a250a77ec087"
            ]
        ]
    },
    {
        "id": "0f49a250a77ec087",
        "type": "debug",
        "z": "d70e53f04ea4219d",
        "name": "debug 7",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 800,
        "y": 320,
        "wires": []
    },
    {
        "id": "64c993181fda90ee",
        "type": "http response",
        "z": "d70e53f04ea4219d",
        "name": "",
        "statusCode": "500",
        "headers": {
            "content-type": "application/json"
        },
        "x": 840,
        "y": 160,
        "wires": []
    },
    {
        "id": "471897e05182350b",
        "type": "change",
        "z": "d70e53f04ea4219d",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"message\":\"Internal server error\",\"code\":1000}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 660,
        "y": 160,
        "wires": [
            [
                "64c993181fda90ee"
            ]
        ]
    },
    {
        "id": "c6801ec5417f1bb9",
        "type": "http request",
        "z": "a19c35db171e7c08",
        "name": "",
        "method": "use",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "84e59769f7f05b82",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 610,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "f30d1578157685b0",
        "type": "function",
        "z": "a19c35db171e7c08",
        "name": "set request",
        "func": "const VISA_HOST =  env.get('VISA_HOST');\nconst VISA_AUTH_ID = env.get('VISA_AUTH_ID');\nconst VISA_AUTH_PASSWORD = env.get('VISA_AUTH_PASSWORD');\n\nconst resource = env.get('resource');\nconst query = env.get('query');  \n\nconst token = Buffer.from(VISA_AUTH_ID + ':' + VISA_AUTH_PASSWORD, 'binary' ).toString('base64');  \n\nmsg.headers = {\n    'Authorization': 'Basic ' + token,\n    'Content-Type': 'application/json;', \n    'Accept': 'application/json;' \n};\n\nmsg.method = env.get('method');\nmsg.url = VISA_HOST + resource + query;\nreturn msg\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 140,
        "wires": [
            [
                "c6801ec5417f1bb9"
            ]
        ]
    },
    {
        "id": "f83075e5cc12da3c",
        "type": "http in",
        "z": "412669072e03744e",
        "name": "[post] api/v1.0/aliases",
        "url": "api/v1.0/aliases",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 180,
        "y": 240,
        "wires": [
            [
                "0709cf8790772006"
            ]
        ],
        "icon": "font-awesome/fa-bank"
    },
    {
        "id": "0709cf8790772006",
        "type": "change",
        "z": "412669072e03744e",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "req.body",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 420,
        "y": 240,
        "wires": [
            [
                "add41942c9b6ea29"
            ]
        ]
    },
    {
        "id": "add41942c9b6ea29",
        "type": "subflow:3d8368539d02f074",
        "z": "412669072e03744e",
        "name": "validate alias",
        "env": [
            {
                "name": "schema",
                "value": "{\"type\":\"object\",\"properties\":{\"aliasType\":{\"type\":\"string\",\"enum\":[\"01\",\"02\",\"03\",\"04\"]},\"issuerName\":{\"type\":\"string\"},\"recipientFirstName\":{\"type\":\"string\"},\"recipientLastName\":{\"type\":\"string\"},\"guid\":{\"type\":\"string\",\"pattern\":\"[^\\\\s]+\"},\"cardType\":{\"type\":\"string\"},\"country\":{\"type\":\"string\",\"pattern\":\"^(A(D|E|F|G|I|L|M|N|O|R|S|T|Q|U|W|X|Z)|B(A|B|D|E|F|G|H|I|J|L|M|N|O|R|S|T|V|W|Y|Z)|C(A|C|D|F|G|H|I|K|L|M|N|O|R|U|V|X|Y|Z)|D(E|J|K|M|O|Z)|E(C|E|G|H|R|S|T)|F(I|J|K|M|O|R)|G(A|B|D|E|F|G|H|I|L|M|N|P|Q|R|S|T|U|W|Y)|H(K|M|N|R|T|U)|I(D|E|Q|L|M|N|O|R|S|T)|J(E|M|O|P)|K(E|G|H|I|M|N|P|R|W|Y|Z)|L(A|B|C|I|K|R|S|T|U|V|Y)|M(A|C|D|E|F|G|H|K|L|M|N|O|Q|P|R|S|T|U|V|W|X|Y|Z)|N(A|C|E|F|G|I|L|O|P|R|U|Z)|OM|P(A|E|F|G|H|K|L|M|N|R|S|T|W|Y)|QA|R(E|O|S|U|W)|S(A|B|C|D|E|G|H|I|J|K|L|M|N|O|R|T|V|Y|Z)|T(C|D|F|G|H|J|K|L|M|N|O|R|T|V|W|Z)|U(A|G|M|S|Y|Z)|V(A|C|E|G|I|N|U)|W(F|S)|Y(E|T)|Z(A|M|W))$\"},\"consentDateTime\":{\"type\":\"string\",\"pattern\":\"[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1]) (2[0-3]|[01][0-9]):[0-5][0-9]:[0-5][0-9]\"}},\"allOf\":[{\"if\":{\"properties\":{\"aliasType\":{\"const\":\"01\"}}},\"then\":{\"properties\":{\"alias\":{\"type\":\"string\",\"minLength\":9,\"maxLength\":15,\"pattern\":\"^[1-9]\\\\d{1,14}$\"}}}},{\"if\":{\"properties\":{\"aliasType\":{\"const\":\"02\"}}},\"then\":{\"properties\":{\"alias\":{\"type\":\"string\",\"minLength\":1,\"maxLength\":128,\"pattern\":\"^([a-z0-9_\\\\.-]+)@([\\\\da-z\\\\.-]+)\\\\.([a-z\\\\.]{2,6})$\"}}}},{\"if\":{\"properties\":{\"aliasType\":{\"const\":\"03\"}}},\"then\":{\"properties\":{\"alias\":{\"type\":\"string\",\"pattern\":\"^[1-3](19|20)\\\\d{2}[7-8]\\\\d{7}[0-9]\\\\d{2}$\"}}}},{\"if\":{\"properties\":{\"aliasType\":{\"const\":\"04\"}}},\"then\":{\"properties\":{\"alias\":{\"type\":\"string\",\"pattern\":\"[a-zA-Z]{2}[0-9]{2}[a-zA-Z0-9]{4}[0-9]{7}([a-zA-Z0-9]?){0,16}\"}}}}],\"required\":[\"aliasType\",\"alias\",\"cardType\",\"country\",\"consentDateTime\",\"guid\",\"recipientLastName\",\"recipientFirstName\",\"issuerName\"]}",
                "type": "json"
            }
        ],
        "x": 650,
        "y": 240,
        "wires": [
            [
                "4fd869c8b618edd5"
            ]
        ]
    },
    {
        "id": "2f062a5572c1ac19",
        "type": "inject",
        "z": "412669072e03744e",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"country\":\"US\",\"recipientLastName\":\"Due\",\"recipientMiddleName\":\"C.\",\"city\":\"NY\",\"address2\":\"Region 3\",\"recipientFirstName\":\"Jon\",\"recipientPrimaryAccountNumber\":\"9000000000004175\",\"address1\":\"Street 1\",\"issuerName\":\"UA Bank 2\",\"postalCode\":\"00111\",\"cardType\":\"Visa Classic\",\"consentDateTime\":\"2021-01-11 12:12:12\",\"aliasType\":\"01\",\"guid\":\"uscard222gc222g\",\"alias\":\"7673335667\"}",
        "payloadType": "json",
        "x": 410,
        "y": 320,
        "wires": [
            [
                "add41942c9b6ea29"
            ]
        ]
    },
    {
        "id": "4d4d480fadc22978",
        "type": "catch",
        "z": "412669072e03744e",
        "name": "",
        "scope": null,
        "uncaught": false,
        "x": 160,
        "y": 480,
        "wires": [
            [
                "890a307b4d633211"
            ]
        ]
    },
    {
        "id": "8513a15eeda3a034",
        "type": "http response",
        "z": "412669072e03744e",
        "name": "",
        "statusCode": "201",
        "headers": {
            "content-type": "application/json"
        },
        "x": 1280,
        "y": 140,
        "wires": [],
        "icon": "font-awesome/fa-bank"
    },
    {
        "id": "cf0204ff01d91717",
        "type": "comment",
        "z": "412669072e03744e",
        "name": "",
        "info": "",
        "x": 1280,
        "y": 100,
        "wires": []
    },
    {
        "id": "fc57ea6402090e73",
        "type": "switch",
        "z": "412669072e03744e",
        "name": "error",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "200",
                "vt": "num"
            },
            {
                "t": "neq",
                "v": "200",
                "vt": "num"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 1030,
        "y": 240,
        "wires": [
            [
                "8513a15eeda3a034"
            ],
            [
                "ac3657e7afd769ed"
            ]
        ]
    },
    {
        "id": "ac3657e7afd769ed",
        "type": "function",
        "z": "412669072e03744e",
        "name": "throw error",
        "func": "const { message } = msg.payload;\n\nconst reasons = message ? message : 'unknown visa api error'; \nmsg.errorCode = 1001;\nmsg.triggered = true;\nnode.error(`Alias wasn\\'t create, ${reasons}` , msg);",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1290,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "890a307b4d633211",
        "type": "subflow:d70e53f04ea4219d",
        "z": "412669072e03744e",
        "name": "",
        "x": 330,
        "y": 480,
        "wires": []
    },
    {
        "id": "4fd869c8b618edd5",
        "type": "subflow:a19c35db171e7c08",
        "z": "412669072e03744e",
        "name": "create alias",
        "env": [
            {
                "name": "resource",
                "value": "visaaliasdirectory/v1/manage/createalias",
                "type": "str"
            }
        ],
        "x": 850,
        "y": 240,
        "wires": [
            [
                "fc57ea6402090e73"
            ]
        ]
    },
    {
        "id": "e7de84cfa6d70d75",
        "type": "comment",
        "z": "412669072e03744e",
        "name": "",
        "info": "",
        "x": 1280,
        "y": 280,
        "wires": []
    },
    {
        "id": "5eb945fe1e06dc98",
        "type": "inject",
        "z": "412669072e03744e",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "sdcsdcdvdvs",
        "payloadType": "str",
        "x": 790,
        "y": 400,
        "wires": [
            [
                "579df332760375e2"
            ]
        ]
    },
    {
        "id": "579df332760375e2",
        "type": "subflow:d70e53f04ea4219d",
        "z": "412669072e03744e",
        "name": "",
        "x": 990,
        "y": 400,
        "wires": []
    },
    {
        "id": "a9b2a57e9e4e1a7a",
        "type": "http in",
        "z": "0127f0442eaff100",
        "name": "[post] api/v1.0/transctions/p2p",
        "url": "api/v1.0/transctions/p2p",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 180,
        "y": 340,
        "wires": [
            [
                "87371f8e81c66eb4"
            ]
        ]
    },
    {
        "id": "c4894dd666641e9e",
        "type": "subflow:3d8368539d02f074",
        "z": "0127f0442eaff100",
        "name": "",
        "x": 840,
        "y": 340,
        "wires": [
            [
                "100698921934f3c4"
            ]
        ]
    },
    {
        "id": "87371f8e81c66eb4",
        "type": "change",
        "z": "0127f0442eaff100",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "req.body",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 460,
        "y": 340,
        "wires": [
            [
                "41d9066069ded495"
            ]
        ]
    },
    {
        "id": "41d9066069ded495",
        "type": "split",
        "z": "0127f0442eaff100",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 650,
        "y": 340,
        "wires": [
            [
                "c4894dd666641e9e"
            ]
        ]
    },
    {
        "id": "e0bc17112253e484",
        "type": "join",
        "z": "0127f0442eaff100",
        "name": "",
        "mode": "auto",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": "false",
        "timeout": "",
        "count": "",
        "reduceRight": false,
        "x": 1190,
        "y": 340,
        "wires": [
            [
                "af222ed522191bb7"
            ]
        ]
    },
    {
        "id": "100698921934f3c4",
        "type": "subflow:a19c35db171e7c08",
        "z": "0127f0442eaff100",
        "name": "",
        "x": 1040,
        "y": 340,
        "wires": [
            [
                "e0bc17112253e484"
            ]
        ]
    },
    {
        "id": "af222ed522191bb7",
        "type": "switch",
        "z": "0127f0442eaff100",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1330,
        "y": 340,
        "wires": [
            []
        ]
    },
    {
        "id": "9690ad879729308e",
        "type": "catch",
        "z": "0127f0442eaff100",
        "name": "",
        "scope": null,
        "uncaught": false,
        "x": 160,
        "y": 460,
        "wires": [
            [
                "170eca90885ba555"
            ]
        ]
    },
    {
        "id": "170eca90885ba555",
        "type": "subflow:d70e53f04ea4219d",
        "z": "0127f0442eaff100",
        "name": "",
        "x": 350,
        "y": 460,
        "wires": []
    },
    {
        "id": "429f2ffb076cd474",
        "type": "link in",
        "z": "2fc48cc339f00e42",
        "name": "link in 1",
        "links": [],
        "x": 155,
        "y": 200,
        "wires": [
            [
                "dd4c08856d5b724b"
            ]
        ]
    },
    {
        "id": "dd4c08856d5b724b",
        "type": "debug",
        "z": "2fc48cc339f00e42",
        "name": "debug 1",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 300,
        "y": 200,
        "wires": []
    },
    {
        "id": "e60b12c1.93bb3",
        "type": "inject",
        "z": "42f285c336936ac1",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0.0",
        "topic": "",
        "payload": "Started!",
        "payloadType": "str",
        "x": 240,
        "y": 200,
        "wires": [
            [
                "a40f8ee942c51d70",
                "9c3b891cc7646254"
            ]
        ]
    },
    {
        "id": "a40f8ee942c51d70",
        "type": "function",
        "z": "42f285c336936ac1",
        "name": "function 1",
        "func": "let port = env.get(\"VISA_AUTH_ID\");\nnode.warn(port)\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "9c3b891cc7646254",
        "type": "debug",
        "z": "42f285c336936ac1",
        "name": "debug 2",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 460,
        "y": 120,
        "wires": []
    }
]