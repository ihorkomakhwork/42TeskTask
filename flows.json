[
    {
        "id": "412669072e03744e",
        "type": "tab",
        "label": "/aliases",
        "disabled": false,
        "info": ""
    },
    {
        "id": "0127f0442eaff100",
        "type": "tab",
        "label": "/transactions",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "243cf85e.3e3af8",
        "type": "tab",
        "label": "VISA SEND MONEY FLOW",
        "disabled": false,
        "info": ""
    },
    {
        "id": "3d8368539d02f074",
        "type": "subflow",
        "name": "json schema validator",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 40,
                "y": 80,
                "wires": [
                    {
                        "id": "9e44cfa7fa94eaa0"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 680,
                "y": 80,
                "wires": [
                    {
                        "id": "9e44cfa7fa94eaa0",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "schema",
                "type": "json",
                "value": "{}",
                "ui": {
                    "icon": "font-awesome/fa-list-alt",
                    "type": "input",
                    "opts": {
                        "types": [
                            "json"
                        ]
                    }
                }
            }
        ],
        "meta": {},
        "color": "#3FADB5",
        "icon": "node-red/parser-json.svg"
    },
    {
        "id": "d70e53f04ea4219d",
        "type": "subflow",
        "name": "error handler",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 100,
                "y": 260,
                "wires": [
                    {
                        "id": "ef363de3347b746e"
                    }
                ]
            }
        ],
        "out": [],
        "env": [],
        "meta": {},
        "color": "#eb6363",
        "icon": "font-awesome/fa-warning"
    },
    {
        "id": "a19c35db171e7c08",
        "type": "subflow",
        "name": "visa api",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 100,
                "y": 400,
                "wires": [
                    {
                        "id": "7ed523e23c4da3f5"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1040,
                "y": 400,
                "wires": [
                    {
                        "id": "157d264fc187f9e3",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "resource",
                "type": "str",
                "value": ""
            },
            {
                "name": "method",
                "type": "str",
                "value": "POST"
            },
            {
                "name": "query",
                "type": "str",
                "value": ""
            }
        ],
        "meta": {},
        "color": "#359df3",
        "icon": "font-awesome/fa-credit-card"
    },
    {
        "id": "f7abbef9ef4f4067",
        "type": "subflow",
        "name": "Misc",
        "info": "",
        "category": "",
        "in": [],
        "out": [],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "f66bf781e6dd219d",
        "type": "subflow",
        "name": "Subflow 1",
        "info": "",
        "in": [],
        "out": []
    },
    {
        "id": "84e59769f7f05b82",
        "type": "tls-config",
        "name": "Visa configuration",
        "cert": "${VISA_AUTH_CERT}",
        "key": "${VISA_AUTH_PRIVATE_KEY}",
        "ca": "",
        "certname": "",
        "keyname": "",
        "caname": "",
        "servername": "",
        "verifyservercert": false,
        "alpnprotocol": ""
    },
    {
        "id": "9e44cfa7fa94eaa0",
        "type": "function",
        "z": "3d8368539d02f074",
        "name": "alias validation",
        "func": "const ajv = new Ajv({ strict: false});\n\nconst schema = env.get('schema');\nconst validate = ajv.compile(schema);\n\nif (validate(msg.payload)) return msg;\nnode.warn(validate.errors);\nmsg.statusCode = 400;\nmsg.triggered = true;\nnode.error(`Validation error`, msg);",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "Ajv",
                "module": "ajv"
            }
        ],
        "x": 320,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "ef363de3347b746e",
        "type": "switch",
        "z": "d70e53f04ea4219d",
        "name": "type error",
        "property": "triggered",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "undefined",
                "vt": "jsonata"
            },
            {
                "t": "true"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 260,
        "y": 260,
        "wires": [
            [
                "471897e05182350b",
                "7c05797abff8208c"
            ],
            [
                "007e7181347da3a3",
                "994754c96bc9da1e"
            ]
        ]
    },
    {
        "id": "64c993181fda90ee",
        "type": "http response",
        "z": "d70e53f04ea4219d",
        "name": "",
        "statusCode": "500",
        "headers": {
            "content-type": "application/json"
        },
        "x": 660,
        "y": 200,
        "wires": []
    },
    {
        "id": "471897e05182350b",
        "type": "change",
        "z": "d70e53f04ea4219d",
        "name": "set responce",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"message\":\"Internal server error\",\"status\":\"500\"}",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "statusCode",
                "pt": "msg",
                "to": "500",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 470,
        "y": 200,
        "wires": [
            [
                "64c993181fda90ee"
            ]
        ]
    },
    {
        "id": "007e7181347da3a3",
        "type": "change",
        "z": "d70e53f04ea4219d",
        "name": "set responce",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{}",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "payload.message",
                "pt": "msg",
                "to": "error.message",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload.status",
                "pt": "msg",
                "to": "statusCode",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 470,
        "y": 320,
        "wires": [
            [
                "a243132f1a50ae62"
            ]
        ]
    },
    {
        "id": "a243132f1a50ae62",
        "type": "http response",
        "z": "d70e53f04ea4219d",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 650,
        "y": 320,
        "wires": []
    },
    {
        "id": "994754c96bc9da1e",
        "type": "debug",
        "z": "d70e53f04ea4219d",
        "name": "debug 11",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 320,
        "y": 420,
        "wires": []
    },
    {
        "id": "7c05797abff8208c",
        "type": "debug",
        "z": "d70e53f04ea4219d",
        "name": "debug 12",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 340,
        "y": 120,
        "wires": []
    },
    {
        "id": "c6801ec5417f1bb9",
        "type": "http request",
        "z": "a19c35db171e7c08",
        "name": "",
        "method": "use",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "84e59769f7f05b82",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 670,
        "y": 400,
        "wires": [
            [
                "157d264fc187f9e3"
            ]
        ]
    },
    {
        "id": "f30d1578157685b0",
        "type": "function",
        "z": "a19c35db171e7c08",
        "name": "set request",
        "func": "const VISA_HOST =  env.get('VISA_HOST');\nconst VISA_MLE_KEY_ID = env.get('VISA_MLE_KEY_ID');\nconst VISA_AUTH_ID = env.get('VISA_AUTH_ID');\nconst VISA_AUTH_PASSWORD = env.get('VISA_AUTH_PASSWORD');\n\nconst resource = env.get('resource');\nconst query = env.get('query');  \n\nconst token = Buffer.from(VISA_AUTH_ID + ':' + VISA_AUTH_PASSWORD).toString('base64');  \n\nmsg.headers = {\n    'Authorization': 'Basic ' + token,\n    'Content-Type': 'application/json;', \n    'Accept': 'application/json;', \n    'keyId': VISA_MLE_KEY_ID,\n};\n\nmsg.method = env.get('method');\nmsg.url = VISA_HOST + resource + query;\nreturn msg\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 470,
        "y": 400,
        "wires": [
            [
                "c6801ec5417f1bb9"
            ]
        ]
    },
    {
        "id": "7ed523e23c4da3f5",
        "type": "function",
        "z": "a19c35db171e7c08",
        "name": "encrypt payload",
        "func": "const fsp = fs.promises;\nconst VISA_MLE_SERVER_CERT = env.get('VISA_MLE_SERVER_CERT');\nconst VISA_MLE_KEY = env.get('VISA_MLE_KEY');\nconst VISA_MLE_KEY_ID = env.get('VISA_MLE_KEY_ID');\n\nconst payloadString = JSON.stringify(msg.payload);\nconst keyStore = jose.JWK.createKeyStore();\nconst encryptionKey = await fsp.readFile(VISA_MLE_KEY);\nconst encProps = {\n    kid: VISA_MLE_KEY_ID,\n    alg: 'RSA-OAEP-256',\n    enc: 'A128GCM'\n};\ntry {\nconst encryptionCert = await fsp.readFile(VISA_MLE_SERVER_CERT);\nconst key = await keyStore.add(encryptionCert, 'pem', encProps);\nconst result = await jose.JWE.createEncrypt({\n                                            format: 'compact', \n                                            fields: { 'enc': 'A128GCM', \n                                                      'iat': Date.now()\n                                                    }\n                                          } ,key )\n                                            .update(payloadString)\n                                            .final() \nmsg.payload = { encData: result }\n} catch (error) {\n  node.error(error.message, msg);\n}\nnode.send(msg);",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "jose",
                "module": "node-jose"
            },
            {
                "var": "fs",
                "module": "fs"
            }
        ],
        "x": 260,
        "y": 400,
        "wires": [
            [
                "f30d1578157685b0"
            ]
        ]
    },
    {
        "id": "157d264fc187f9e3",
        "type": "function",
        "z": "a19c35db171e7c08",
        "name": "decrypt payload",
        "func": "const fsp = fs.promises;\nconst VISA_MLE_KEY = env.get('VISA_MLE_KEY');\nconst VISA_MLE_KEY_ID = env.get('VISA_MLE_KEY_ID');\n\nconst encryptedPayload = typeof msg.payload == 'string' ? JSON.parse(msg.payload) : msg.payload;\n\n\nconst decrypt = async ( payload ) => {\n    try {\n        const keystore = jose.JWK.createKeyStore();\n        const decProps = {\n            kid: VISA_MLE_KEY_ID,\n            alg: 'RSA-OAEP-256',\n            enc: 'A128GCM'\n        };\n        \n        const decryptionKey = await fsp.readFile(VISA_MLE_KEY);\n        const key = await keystore.add(decryptionKey, 'pem', decProps);\n        const data = await jose.JWE.createDecrypt(key).decrypt(payload)\n        return data;\n    } catch (error) {\n        node.error(error.message, msg);\n    }\n}\n\nconst result = await decrypt(encryptedPayload.encData);\n\nmsg.payload = JSON.parse(result.payload.toString());\nnode.send(msg);\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "jose",
                "module": "node-jose"
            },
            {
                "var": "fs",
                "module": "fs"
            }
        ],
        "x": 880,
        "y": 400,
        "wires": [
            []
        ]
    },
    {
        "id": "3674ea7e249b8b9a",
        "type": "http response",
        "z": "f7abbef9ef4f4067",
        "name": "",
        "statusCode": "201",
        "headers": {
            "content-type": "application/json"
        },
        "x": 400,
        "y": 360,
        "wires": [],
        "icon": "font-awesome/fa-bank"
    },
    {
        "id": "3dfda62830f18116",
        "type": "function",
        "z": "f7abbef9ef4f4067",
        "name": "throw error",
        "func": "const { id } = msg.parts;\nconst { statusCode } = msg;\n\nconst sequence = flow.get('sequences').get(id);\n\nif (statusCode != 200) {\n    if (sequence.reject) {\n        return [null , null];\n    } else {\n        return [null , msg ]   \n    }\n};\nreturn msg;",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 460,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "19522032b2dff8e5",
        "type": "join",
        "z": "f7abbef9ef4f4067",
        "name": "",
        "mode": "auto",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": "false",
        "timeout": "",
        "count": "",
        "reduceRight": false,
        "x": 590,
        "y": 460,
        "wires": [
            []
        ]
    },
    {
        "id": "9c033e017bafe395",
        "type": "change",
        "z": "f7abbef9ef4f4067",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload.statusCode",
                "pt": "msg",
                "to": "statusCode",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 500,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "3edd8d6bc2dbae70",
        "type": "subflow:a19c35db171e7c08",
        "z": "f7abbef9ef4f4067",
        "name": "",
        "env": [
            {
                "name": "resource",
                "value": "visaaliasdirectory/v1/resolve",
                "type": "str"
            }
        ],
        "x": 820,
        "y": 280,
        "wires": [
            [
                "65b96cd106f07a9b"
            ]
        ]
    },
    {
        "id": "65b96cd106f07a9b",
        "type": "switch",
        "z": "f7abbef9ef4f4067",
        "name": "error",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "200",
                "vt": "num"
            },
            {
                "t": "neq",
                "v": "200",
                "vt": "num"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 990,
        "y": 280,
        "wires": [
            [
                "d03d258d26fbbc36"
            ],
            []
        ]
    },
    {
        "id": "db0e8407f97d1cac",
        "type": "function",
        "z": "f7abbef9ef4f4067",
        "name": "s",
        "func": "const { id, key } = msg.parts;\nconst sequences = flow.get('sequences');\nsequences.set(id, { key, rejected: false }); \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "fd2c6d9bd7ac124e",
        "type": "function",
        "z": "f7abbef9ef4f4067",
        "name": "function 3",
        "func": "",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 860,
        "y": 400,
        "wires": [
            []
        ]
    },
    {
        "id": "c362b989.954ae8",
        "type": "http in",
        "z": "f7abbef9ef4f4067",
        "name": "",
        "url": "/hello-cookie",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 360,
        "y": 80,
        "wires": [
            [
                "21ddf71f.d00518"
            ]
        ]
    },
    {
        "id": "21ddf71f.d00518",
        "type": "function",
        "z": "f7abbef9ef4f4067",
        "name": "Format cookies",
        "func": "msg.payload = JSON.stringify(msg.req.cookies,null,4);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 570,
        "y": 80,
        "wires": [
            [
                "f3aa98c1.befc18"
            ]
        ]
    },
    {
        "id": "f3aa98c1.befc18",
        "type": "template",
        "z": "f7abbef9ef4f4067",
        "name": "page",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<html>\n    <head></head>\n    <body>\n        <h1>Cookies</h1>\n        <p></p><a href=\"hello-cookie/add\">Add a cookie</a> &bull; <a href=\"hello-cookie/clear\">Clear cookies</a></p>\n        <pre>{{ payload }}</pre>\n    </body>\n</html>",
        "x": 760,
        "y": 80,
        "wires": [
            [
                "f52e2880.180968"
            ]
        ]
    },
    {
        "id": "f52e2880.180968",
        "type": "http response",
        "z": "f7abbef9ef4f4067",
        "name": "",
        "x": 980,
        "y": 80,
        "wires": []
    },
    {
        "id": "9a2a9a4.0fc0768",
        "type": "change",
        "z": "f7abbef9ef4f4067",
        "name": "Redirect to /hello-cookie",
        "rules": [
            {
                "t": "set",
                "p": "statusCode",
                "pt": "msg",
                "to": "302",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "headers",
                "pt": "msg",
                "to": "{}",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "headers.location",
                "pt": "msg",
                "to": "/hello-cookie",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 780,
        "y": 140,
        "wires": [
            [
                "f52e2880.180968"
            ]
        ]
    },
    {
        "id": "afefb90.53dcf48",
        "type": "function",
        "z": "f7abbef9ef4f4067",
        "name": "Add a cookie",
        "func": "msg.cookies = { };\nmsg.cookies[\"demo-\"+(Math.floor(Math.random()*1000))] = Date.now();\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 560,
        "y": 120,
        "wires": [
            [
                "9a2a9a4.0fc0768"
            ]
        ]
    },
    {
        "id": "d5205a2c.db9018",
        "type": "function",
        "z": "f7abbef9ef4f4067",
        "name": "Clear cookies",
        "func": "// Find demo cookies and clear them\nvar cookieNames = Object.keys(msg.req.cookies).filter(function(cookieName) { return /^demo-/.test(cookieName);});\nmsg.cookies = {};\n\ncookieNames.forEach(function(cookieName) {\n    msg.cookies[cookieName] = null;\n});\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 570,
        "y": 160,
        "wires": [
            [
                "9a2a9a4.0fc0768"
            ]
        ]
    },
    {
        "id": "fda60c66.04975",
        "type": "http in",
        "z": "f7abbef9ef4f4067",
        "name": "",
        "url": "/hello-cookie/add",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 370,
        "y": 120,
        "wires": [
            [
                "afefb90.53dcf48"
            ]
        ]
    },
    {
        "id": "35285a76.1f8636",
        "type": "http in",
        "z": "f7abbef9ef4f4067",
        "name": "",
        "url": "/hello-cookie/clear",
        "method": "get",
        "swaggerDoc": "",
        "x": 370,
        "y": 160,
        "wires": [
            [
                "d5205a2c.db9018"
            ]
        ]
    },
    {
        "id": "d03d258d26fbbc36",
        "type": "delay",
        "z": "f7abbef9ef4f4067",
        "name": "",
        "pauseType": "delay",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1140,
        "y": 220,
        "wires": [
            [
                "617e5f2675311091"
            ]
        ]
    },
    {
        "id": "617e5f2675311091",
        "type": "debug",
        "z": "f7abbef9ef4f4067",
        "name": "debug 7",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1320,
        "y": 260,
        "wires": []
    },
    {
        "id": "f92e8a7689be2b7f",
        "type": "subflow:3d8368539d02f074",
        "z": "f7abbef9ef4f4067",
        "name": "validate alias(old api)",
        "env": [
            {
                "name": "schema",
                "value": "{\"type\":\"object\",\"properties\":{\"aliasType\":{\"type\":\"string\",\"const\":\"01\"},\"alias\":{\"type\":\"string\",\"minLength\":9,\"maxLength\":15,\"pattern\":\"^[1-9]\\\\d{1,14}$\"},\"issuerName\":{\"type\":\"string\"},\"recipientFirstName\":{\"type\":\"string\"},\"recipientLastName\":{\"type\":\"string\"},\"guid\":{\"type\":\"string\",\"pattern\":\"[^\\\\s]+\"},\"cardType\":{\"type\":\"string\"},\"country\":{\"type\":\"string\",\"pattern\":\"^(A(D|E|F|G|I|L|M|N|O|R|S|T|Q|U|W|X|Z)|B(A|B|D|E|F|G|H|I|J|L|M|N|O|R|S|T|V|W|Y|Z)|C(A|C|D|F|G|H|I|K|L|M|N|O|R|U|V|X|Y|Z)|D(E|J|K|M|O|Z)|E(C|E|G|H|R|S|T)|F(I|J|K|M|O|R)|G(A|B|D|E|F|G|H|I|L|M|N|P|Q|R|S|T|U|W|Y)|H(K|M|N|R|T|U)|I(D|E|Q|L|M|N|O|R|S|T)|J(E|M|O|P)|K(E|G|H|I|M|N|P|R|W|Y|Z)|L(A|B|C|I|K|R|S|T|U|V|Y)|M(A|C|D|E|F|G|H|K|L|M|N|O|Q|P|R|S|T|U|V|W|X|Y|Z)|N(A|C|E|F|G|I|L|O|P|R|U|Z)|OM|P(A|E|F|G|H|K|L|M|N|R|S|T|W|Y)|QA|R(E|O|S|U|W)|S(A|B|C|D|E|G|H|I|J|K|L|M|N|O|R|T|V|Y|Z)|T(C|D|F|G|H|J|K|L|M|N|O|R|T|V|W|Z)|U(A|G|M|S|Y|Z)|V(A|C|E|G|I|N|U)|W(F|S)|Y(E|T)|Z(A|M|W))$\"},\"consentDateTime\":{\"type\":\"string\",\"pattern\":\"[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1]) (2[0-3]|[01][0-9]):[0-5][0-9]:[0-5][0-9]\"}},\"required\":[\"aliasType\",\"alias\",\"cardType\",\"country\",\"consentDateTime\",\"guid\",\"recipientLastName\",\"recipientFirstName\",\"issuerName\"]}",
                "type": "json"
            }
        ],
        "x": 500,
        "y": 540,
        "wires": [
            []
        ]
    },
    {
        "id": "1589b08ea9f51358",
        "type": "subflow:3d8368539d02f074",
        "z": "f7abbef9ef4f4067",
        "name": "validate validate(both type)",
        "env": [
            {
                "name": "schema",
                "value": "{\"type\":\"object\",\"properties\":{\"aliasType\":{\"type\":\"string\",\"enum\":[\"PHONE\",\"EMAIL\"]},\"consent\":{\"type\":\"object\",\"properties\":{\"presenter\":{\"type\":\"string\"},\"version\":{\"type\":\"string\",\"minLength\":1,\"maxLength\":9,\"pattern\":\"^[0-9]+.[0-9]+$\"}},\"required\":[\"presenter\",\"version\"]},\"identification\":{\"type\":\"object\",\"properties\":{\"type\":{\"type\":\"string\",\"enum\":[\"PASSPORT\",\"DL\",\"NIDN\",\"DPI\"]},\"value\":{\"type\":\"string\",\"minLength\":1,\"maxLength\":36}},\"required\":[\"type\",\"value\"]},\"paymentCredentials\":{\"type\":\"array\",\"items\":{\"oneOf\":[{\"type\":\"object\",\"properties\":{\"accountNumber\":{\"type\":\"string\",\"minLength\":6,\"maxLength\":19,\"pattern\":\"^d*$\"},\"type\":{\"type\":\"string\",\"enum\":[\"CARD\",\"BANK\"]},\"billingAddress\":{\"type\":\"object\",\"properties\":{\"country\":{\"type\":\"string\",\"maxLength\":3,\"minLength\":3,\"pattern\":\"rn/^ABW|AFG|AGO|AIA|ALA|ALB|AND|ARE|ARG|ARM|ASM|ATA|ATF|ATG|AUS|AUT|AZE|BDI|BEL|BEN|BES|BFA|BGD|BGR|BHR|BHS|BIH|BLM|BLR|BLZ|BMU|BOL|BRA|BRB|BRN|BTN|BVT|BWA|CAF|CAN|CCK|CHE|CHL|CHN|CIV|CMR|COD|COG|COK|COL|COM|CPV|CRI|CUB|CUW|CXR|CYM|CYP|CZE|DEU|DJI|DMA|DNK|DOM|DZA|ECU|EGY|ERI|ESH|ESP|EST|ETH|FIN|FJI|FLK|FRA|FRO|FSM|GAB|GBR|GEO|GGY|GHA|GIB|GIN|GLP|GMB|GNB|GNQ|GRC|GRD|GRL|GTM|GUF|GUM|GUY|HKG|HMD|HND|HRV|HTI|HUN|IDN|IMN|IND|IOT|IRL|IRN|IRQ|ISL|ISR|ITA|JAM|JEY|JOR|JPN|KAZ|KEN|KGZ|KHM|KIR|KNA|KOR|KWT|LAO|LBN|LBR|LBY|LCA|LIE|LKA|LSO|LTU|LUX|LVA|MAC|MAF|MAR|MCO|MDA|MDG|MDV|MEX|MHL|MKD|MLI|MLT|MMR|MNE|MNG|MNP|MOZ|MRT|MSR|MTQ|MUS|MWI|MYS|MYT|NAM|NCL|NER|NFK|NGA|NIC|NIU|NLD|NOR|NPL|NRU|NZL|OMN|PAK|PAN|PCN|PER|PHL|PLW|PNG|POL|PRI|PRK|PRT|PRY|PSE|PYF|QAT|REU|ROU|RUS|RWA|SAU|SDN|SEN|SGP|SGS|SHN|SJM|SLB|SLE|SLV|SMR|SOM|SPM|SRB|SSD|STP|SUR|SVK|SVN|SWE|SWZ|SXM|SYC|SYR|TCA|TCD|TGO|THA|TJK|TKL|TKM|TLS|TON|TTO|TUN|TUR|TUV|TWN|TZA|UGA|UKR|UMI|URY|USA|UZB|VAT|VCT|VEN|VGB|VIR|VNM|VUT|WLF|WSM|YEM|ZAF|ZMB|ZWE$/\"}},\"required\":[\"country\"]},\"preferredFor\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"type\":{\"type\":\"string\",\"enum\":[\"RECEIVE\",\"SEND\",\"PAY\"]}},\"required\":[\"type\"]},\"minContains\":0,\"maxContains\":3}},\"required\":[\"accountNumber\",\"type\",\"billingAddress\",\"preferredFor\"]},{\"type\":\"object\",\"properties\":{\"accountName\":{\"type\":\"string\",\"minLength\":1,\"maxLength\":70,\"pattern\":\"^[a-zA-Z0-9/-:()'+]+$rn\"},\"type\":{\"type\":\"string\",\"enum\":[\"CARD\",\"BANK\"]},\"accountNumber\":{\"type\":\"string\",\"minLength\":1,\"maxLength\":34,\"pattern\":\"^[a-zA-Z0-9/-:()'+]+$rn\"},\"accountNumberType\":{\"type\":\"string\",\"enum\":[\"IBAN\",\"DEFAULT\"]},\"bankName\":{\"type\":\"string\",\"pattern\":\"^[a-zA-Z0-9/-:()'+]+$rn\",\"minLength\":1,\"maxLength\":50},\"countryCode\":{\"type\":\"string\",\"minLength\":3,\"maxLength\":3,\"pattern\":\"/^A(BW|FG|GO|IA|L[AB]|ND|R[EGM]|SM|T[ArnFG]|U[ST]|ZE)|B(DI|E[LNS]|FA|G[DR]|H[RS]|IH|L[MRZ]|MU|OL|rnR[ABN]|TN|VT|WA)|C(A[FN]|CK|H[ELN]|IV|MR|O[DGKLM]|PV|RI|Urn[BW]|XR|Y[MP]|ZE)|D(EU|JI|MA|NK|OM|ZA)|E(CU|GY|RI|S[HPT]|rnTH)|F(IN|JI|LK|R[AO]|SM)|G(AB|BR|EO|GY|HA|I[BN]|LP|MB|N[BrnQ]|R[CDL]|TM|U[FMY])|H(KG|MD|ND|RV|TI|UN)|I(DN|MN|ND|OT|Rrn[LNQ]|S[LR]|TA)|J(AM|EY|OR|PN)|K(AZ|EN|GZ|HM|IR|NA|OR|WT)rn|L(AO|B[NRY]|CA|IE|KA|SO|TU|UX|VA)|M(A[CFR]|CO|D[AGV]|EX|rnHL|KD|L[IT]|MR|N[EGP]|OZ|RT|SR|TQ|US|WI|Y[ST])|N(AM|CL|ERrn|FK|GA|I[CU]|LD|OR|PL|RU|ZL)|OMN|P(A[KN]|CN|ER|HL|LW|NG|OrnL|R[IKTY]|SE|YF)|QAT|R(EU|OU|US|WA)|S(AU|DN|EN|G[PS]|HN|JrnM|L[BEV]|MR|OM|PM|RB|SD|TP|UR|V[KN]|W[EZ]|XM|Y[CR])|T(C[ArnD]|GO|HA|JK|K[LM]|LS|ON|TO|U[NRV]|WN|ZA)|U(GA|KR|MI|RY|SArn|ZB)|V(AT|CT|EN|GB|IR|NM|UT)|W(LF|SM)|YEM|Z(AF|MB|WE)$/ix\"},\"currencyCode\":{\"type\":\"string\",\"minLength\":3,\"maxLength\":3,\"pattern\":\"rnrn/^AED|AFN|ALL|AMD|ANG|AOA|ARS|AUD|AWG|AZN|BAM|BBD|BDT|BGN|BHD|BIF|BMD|BND|BOB|BRL|BSD|BTN|BWP|BYR|BZD|CAD|CDF|CHF|CLP|CNY|COP|CRC|CUC|CUP|CVE|CZK|DJF|DKK|DOP|DZD|EGP|ERN|ETB|EUR|FJD|FKP|GBP|GEL|GGP|GHS|GIP|GMD|GNF|GTQ|GYD|HKD|HNL|HRK|HTG|HUF|IDR|ILS|IMP|INR|IQD|IRR|ISK|JEP|JMD|JOD|JPY|KES|KGS|KHR|KMF|KPW|KRW|KWD|KYD|KZT|LAK|LBP|LKR|LRD|LSL|LYD|MAD|MDL|MGA|MKD|MMK|MNT|MOP|MRO|MUR|MVR|MWK|MXN|MYR|MZN|NAD|NGN|NIO|NOK|NPR|NZD|OMR|PAB|PEN|PGK|PHP|PKR|PLN|PYG|QAR|RON|RSD|RUB|RWF|SAR|SBD|SCR|SDG|SEK|SGD|SHP|SLL|SOS|SPL|SRD|STD|SVC|SYP|SZL|THB|TJS|TMT|TND|TOP|TRY|TTD|TVD|TWD|TZS|UAH|UGX|USD|UYU|UZS|VEF|VND|VUV|WST|XAF|XCD|XDR|XOF|XPF|YER|ZAR|ZMW|ZWD$/\"},\"preferredFor\":{\"type\":\"string\",\"enum\":[\"RECEIVE\",\"SEND\",\"PAY\"]}},\"required\":[\"accountName\",\"type\",\"accountNumber\",\"accountNumberType\",\"bankName\",\"countryCode\",\"currencyCode\",\"preferredFor\"]}]},\"minContains\":1,\"maxContains\":10},\"profile\":{\"type\":\"object\",\"properties\":{\"contactInfo\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"type\":{\"type\":\"string\",\"enum\":[\"EMAIL\",\"PHONE\"]},\"value\":{\"type\":\"string\",\"minLength\":1,\"maxLength\":320}},\"required\":[\"type\",\"value\"]},\"minContains\":2}},\"required\":[\"contactInfo\"]}},\"allOf\":[{\"if\":{\"properties\":{\"aliasType\":{\"const\":\"EMAIL\"}}},\"then\":{\"properties\":{\"aliasValue\":{\"type\":\"string\",\"minLength\":1,\"maxLength\":128,\"pattern\":\"^([a-z0-9_.-]+)@([da-z.-]+).([a-z.]{2,6})$\"}}}},{\"if\":{\"properties\":{\"aliasType\":{\"const\":\"PHONE\"}}},\"then\":{\"properties\":{\"aliasValue\":{\"type\":\"string\",\"minLength\":1,\"maxLength\":128,\"pattern\":\"^[1-9]+[0-9]*$\"}}}}],\"required\":[\"aliasType\",\"aliasValue\",\"consent\",\"identification\",\"paymentCredentials\",\"profile\"]}",
                "type": "json"
            }
        ],
        "x": 560,
        "y": 620,
        "wires": [
            []
        ]
    },
    {
        "id": "bd45081350bace21",
        "type": "split",
        "z": "f66bf781e6dd219d",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "role",
        "x": 390,
        "y": 80,
        "wires": [
            [
                "cfa624d5d326a870"
            ]
        ]
    },
    {
        "id": "cfa624d5d326a870",
        "type": "subflow:a19c35db171e7c08",
        "z": "f66bf781e6dd219d",
        "name": "",
        "env": [
            {
                "name": "resource",
                "value": "visaaliasdirectory/v1/resolve",
                "type": "str"
            }
        ],
        "x": 560,
        "y": 80,
        "wires": [
            [
                "be1d08fd12237b45"
            ]
        ]
    },
    {
        "id": "7f296807ed86873a",
        "type": "join",
        "z": "f66bf781e6dd219d",
        "name": "",
        "mode": "custom",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "role",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "num",
        "reduceFixup": "",
        "x": 930,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "5da25f2c3bf73737",
        "type": "function",
        "z": "f66bf781e6dd219d",
        "name": "store sequence",
        "func": "const TOKEN_LENGTH = 16;\nconst ALPHA = 'abcdefghijklmnopqrstuvwxyz';\nconst DIGIT = '0123456789';\nconst ALPHA_DIGIT = ALPHA + DIGIT;\n\nconst base = ALPHA_DIGIT.length;\n\nmsg.sequenceID = '';\nfor (let i = 0; i < TOKEN_LENGTH; i++) {\n    const index = Math.floor(Math.random() * base);\n    msg.sequenceID += ALPHA_DIGIT[index];\n}\n\nflow.set(msg.sequenceID, { statusCodes: [] });\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 80,
        "wires": [
            [
                "bd45081350bace21"
            ]
        ]
    },
    {
        "id": "be1d08fd12237b45",
        "type": "function",
        "z": "f66bf781e6dd219d",
        "name": "save codes",
        "func": "const sequence = flow.get(msg.sequenceID);\nsequence.statusCodes.push(msg.statusCode);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 80,
        "wires": [
            [
                "7f296807ed86873a"
            ]
        ]
    },
    {
        "id": "f83075e5cc12da3c",
        "type": "http in",
        "z": "412669072e03744e",
        "name": "[post] api/v1.0/aliases",
        "url": "api/v1.0/aliases",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 160,
        "y": 320,
        "wires": [
            [
                "b95759322ffdf456"
            ]
        ],
        "icon": "font-awesome/fa-bank"
    },
    {
        "id": "4d4d480fadc22978",
        "type": "catch",
        "z": "412669072e03744e",
        "name": "",
        "scope": null,
        "uncaught": false,
        "x": 120,
        "y": 540,
        "wires": [
            [
                "890a307b4d633211"
            ]
        ]
    },
    {
        "id": "8513a15eeda3a034",
        "type": "http response",
        "z": "412669072e03744e",
        "name": "",
        "statusCode": "201",
        "headers": {
            "content-type": "application/json"
        },
        "x": 1240,
        "y": 260,
        "wires": [],
        "icon": "font-awesome/fa-bank"
    },
    {
        "id": "fc57ea6402090e73",
        "type": "switch",
        "z": "412669072e03744e",
        "name": "error",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "200",
                "vt": "num"
            },
            {
                "t": "neq",
                "v": "200",
                "vt": "num"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 830,
        "y": 320,
        "wires": [
            [
                "8ab91041abef5398"
            ],
            [
                "ac3657e7afd769ed"
            ]
        ]
    },
    {
        "id": "ac3657e7afd769ed",
        "type": "function",
        "z": "412669072e03744e",
        "name": "throw error",
        "func": "const { errorMessages } = msg.payload;\n\nconst message = errorMessages.join(', ')\nconst reasons = message ? message : 'unknown visa api error';\nmsg.statusCode = 500;\nmsg.triggered = true;\nnode.error(`Alias wasn\\'t create, ${reasons}` , msg);",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1050,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "890a307b4d633211",
        "type": "subflow:d70e53f04ea4219d",
        "z": "412669072e03744e",
        "name": "",
        "x": 330,
        "y": 540,
        "wires": []
    },
    {
        "id": "4fd869c8b618edd5",
        "type": "subflow:a19c35db171e7c08",
        "z": "412669072e03744e",
        "name": "create alias",
        "env": [
            {
                "name": "resource",
                "value": "aliasdirectory/v1/aliases",
                "type": "str"
            }
        ],
        "x": 670,
        "y": 320,
        "wires": [
            [
                "fc57ea6402090e73"
            ]
        ]
    },
    {
        "id": "8ab91041abef5398",
        "type": "change",
        "z": "412669072e03744e",
        "name": "set message",
        "rules": [
            {
                "t": "set",
                "p": "payload.message",
                "pt": "msg",
                "to": "Alias was create sccesfull",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1050,
        "y": 260,
        "wires": [
            [
                "8513a15eeda3a034"
            ]
        ]
    },
    {
        "id": "b95759322ffdf456",
        "type": "subflow:3d8368539d02f074",
        "z": "412669072e03744e",
        "name": "validate alias(by phone number)",
        "env": [
            {
                "name": "schema",
                "value": "{\"type\":\"object\",\"properties\":{\"aliasType\":{\"type\":\"string\",\"const\":\"PHONE\"},\"consent\":{\"type\":\"object\",\"properties\":{\"presenter\":{\"type\":\"string\"},\"version\":{\"type\":\"string\",\"minLength\":1,\"maxLength\":9,\"pattern\":\"^[0-9]+.[0-9]+$\"}},\"required\":[\"presenter\",\"version\"]},\"identification\":{\"type\":\"object\",\"properties\":{\"type\":{\"type\":\"string\",\"enum\":[\"PASSPORT\",\"DL\",\"NIDN\",\"DPI\"]},\"value\":{\"type\":\"string\",\"minLength\":1,\"maxLength\":36}},\"required\":[\"type\",\"value\"]},\"paymentCredentials\":{\"type\":\"array\",\"items\":{\"oneOf\":[{\"type\":\"object\",\"properties\":{\"accountNumber\":{\"type\":\"string\",\"minLength\":6,\"maxLength\":19,\"pattern\":\"\\\\d*$\"},\"type\":{\"type\":\"string\",\"enum\":[\"CARD\",\"BANK\"]},\"billingAddress\":{\"type\":\"object\",\"properties\":{\"country\":{\"type\":\"string\",\"maxLength\":3,\"minLength\":3,\"pattern\":\"rn/^ABW|AFG|AGO|AIA|ALA|ALB|AND|ARE|ARG|ARM|ASM|ATA|ATF|ATG|AUS|AUT|AZE|BDI|BEL|BEN|BES|BFA|BGD|BGR|BHR|BHS|BIH|BLM|BLR|BLZ|BMU|BOL|BRA|BRB|BRN|BTN|BVT|BWA|CAF|CAN|CCK|CHE|CHL|CHN|CIV|CMR|COD|COG|COK|COL|COM|CPV|CRI|CUB|CUW|CXR|CYM|CYP|CZE|DEU|DJI|DMA|DNK|DOM|DZA|ECU|EGY|ERI|ESH|ESP|EST|ETH|FIN|FJI|FLK|FRA|FRO|FSM|GAB|GBR|GEO|GGY|GHA|GIB|GIN|GLP|GMB|GNB|GNQ|GRC|GRD|GRL|GTM|GUF|GUM|GUY|HKG|HMD|HND|HRV|HTI|HUN|IDN|IMN|IND|IOT|IRL|IRN|IRQ|ISL|ISR|ITA|JAM|JEY|JOR|JPN|KAZ|KEN|KGZ|KHM|KIR|KNA|KOR|KWT|LAO|LBN|LBR|LBY|LCA|LIE|LKA|LSO|LTU|LUX|LVA|MAC|MAF|MAR|MCO|MDA|MDG|MDV|MEX|MHL|MKD|MLI|MLT|MMR|MNE|MNG|MNP|MOZ|MRT|MSR|MTQ|MUS|MWI|MYS|MYT|NAM|NCL|NER|NFK|NGA|NIC|NIU|NLD|NOR|NPL|NRU|NZL|OMN|PAK|PAN|PCN|PER|PHL|PLW|PNG|POL|PRI|PRK|PRT|PRY|PSE|PYF|QAT|REU|ROU|RUS|RWA|SAU|SDN|SEN|SGP|SGS|SHN|SJM|SLB|SLE|SLV|SMR|SOM|SPM|SRB|SSD|STP|SUR|SVK|SVN|SWE|SWZ|SXM|SYC|SYR|TCA|TCD|TGO|THA|TJK|TKL|TKM|TLS|TON|TTO|TUN|TUR|TUV|TWN|TZA|UGA|UKR|UMI|URY|USA|UZB|VAT|VCT|VEN|VGB|VIR|VNM|VUT|WLF|WSM|YEM|ZAF|ZMB|ZWE$/\"}},\"required\":[\"country\"]},\"preferredFor\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"type\":{\"type\":\"string\",\"enum\":[\"RECEIVE\",\"SEND\",\"PAY\"]}},\"required\":[\"type\"]},\"minContains\":0,\"maxContains\":3}},\"required\":[\"accountNumber\",\"type\",\"billingAddress\",\"preferredFor\"]},{\"type\":\"object\",\"properties\":{\"accountName\":{\"type\":\"string\",\"minLength\":1,\"maxLength\":70,\"pattern\":\"^[a-zA-Z0-9/-:()'+]+$rn\"},\"type\":{\"type\":\"string\",\"enum\":[\"CARD\",\"BANK\"]},\"accountNumber\":{\"type\":\"string\",\"minLength\":1,\"maxLength\":34,\"pattern\":\"^[a-zA-Z0-9/-:()'+]+$rn\"},\"accountNumberType\":{\"type\":\"string\",\"enum\":[\"IBAN\",\"DEFAULT\"]},\"bankName\":{\"type\":\"string\",\"pattern\":\"^[a-zA-Z0-9/-:()'+]+$rn\",\"minLength\":1,\"maxLength\":50},\"countryCode\":{\"type\":\"string\",\"minLength\":3,\"maxLength\":3,\"pattern\":\"/^A(BW|FG|GO|IA|L[AB]|ND|R[EGM]|SM|T[ArnFG]|U[ST]|ZE)|B(DI|E[LNS]|FA|G[DR]|H[RS]|IH|L[MRZ]|MU|OL|rnR[ABN]|TN|VT|WA)|C(A[FN]|CK|H[ELN]|IV|MR|O[DGKLM]|PV|RI|Urn[BW]|XR|Y[MP]|ZE)|D(EU|JI|MA|NK|OM|ZA)|E(CU|GY|RI|S[HPT]|rnTH)|F(IN|JI|LK|R[AO]|SM)|G(AB|BR|EO|GY|HA|I[BN]|LP|MB|N[BrnQ]|R[CDL]|TM|U[FMY])|H(KG|MD|ND|RV|TI|UN)|I(DN|MN|ND|OT|Rrn[LNQ]|S[LR]|TA)|J(AM|EY|OR|PN)|K(AZ|EN|GZ|HM|IR|NA|OR|WT)rn|L(AO|B[NRY]|CA|IE|KA|SO|TU|UX|VA)|M(A[CFR]|CO|D[AGV]|EX|rnHL|KD|L[IT]|MR|N[EGP]|OZ|RT|SR|TQ|US|WI|Y[ST])|N(AM|CL|ERrn|FK|GA|I[CU]|LD|OR|PL|RU|ZL)|OMN|P(A[KN]|CN|ER|HL|LW|NG|OrnL|R[IKTY]|SE|YF)|QAT|R(EU|OU|US|WA)|S(AU|DN|EN|G[PS]|HN|JrnM|L[BEV]|MR|OM|PM|RB|SD|TP|UR|V[KN]|W[EZ]|XM|Y[CR])|T(C[ArnD]|GO|HA|JK|K[LM]|LS|ON|TO|U[NRV]|WN|ZA)|U(GA|KR|MI|RY|SArn|ZB)|V(AT|CT|EN|GB|IR|NM|UT)|W(LF|SM)|YEM|Z(AF|MB|WE)$/ix\"},\"currencyCode\":{\"type\":\"string\",\"minLength\":3,\"maxLength\":3,\"pattern\":\"rnrn/^AED|AFN|ALL|AMD|ANG|AOA|ARS|AUD|AWG|AZN|BAM|BBD|BDT|BGN|BHD|BIF|BMD|BND|BOB|BRL|BSD|BTN|BWP|BYR|BZD|CAD|CDF|CHF|CLP|CNY|COP|CRC|CUC|CUP|CVE|CZK|DJF|DKK|DOP|DZD|EGP|ERN|ETB|EUR|FJD|FKP|GBP|GEL|GGP|GHS|GIP|GMD|GNF|GTQ|GYD|HKD|HNL|HRK|HTG|HUF|IDR|ILS|IMP|INR|IQD|IRR|ISK|JEP|JMD|JOD|JPY|KES|KGS|KHR|KMF|KPW|KRW|KWD|KYD|KZT|LAK|LBP|LKR|LRD|LSL|LYD|MAD|MDL|MGA|MKD|MMK|MNT|MOP|MRO|MUR|MVR|MWK|MXN|MYR|MZN|NAD|NGN|NIO|NOK|NPR|NZD|OMR|PAB|PEN|PGK|PHP|PKR|PLN|PYG|QAR|RON|RSD|RUB|RWF|SAR|SBD|SCR|SDG|SEK|SGD|SHP|SLL|SOS|SPL|SRD|STD|SVC|SYP|SZL|THB|TJS|TMT|TND|TOP|TRY|TTD|TVD|TWD|TZS|UAH|UGX|USD|UYU|UZS|VEF|VND|VUV|WST|XAF|XCD|XDR|XOF|XPF|YER|ZAR|ZMW|ZWD$/\"},\"preferredFor\":{\"type\":\"string\",\"enum\":[\"RECEIVE\",\"SEND\",\"PAY\"]}},\"required\":[\"accountName\",\"type\",\"accountNumber\",\"accountNumberType\",\"bankName\",\"countryCode\",\"currencyCode\",\"preferredFor\"]}]},\"minContains\":1,\"maxContains\":10},\"profile\":{\"type\":\"object\",\"properties\":{\"contactInfo\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"type\":{\"type\":\"string\",\"enum\":[\"EMAIL\",\"PHONE\"]},\"value\":{\"type\":\"string\",\"minLength\":1,\"maxLength\":320}},\"required\":[\"type\",\"value\"]},\"minContains\":2}},\"required\":[\"contactInfo\"]},\"aliasValue\":{\"type\":\"string\",\"minLength\":1,\"maxLength\":128,\"pattern\":\"^[1-9]+[0-9]*$\"}},\"required\":[\"aliasType\",\"aliasValue\",\"consent\",\"identification\",\"paymentCredentials\",\"profile\"]}",
                "type": "json"
            }
        ],
        "x": 430,
        "y": 320,
        "wires": [
            [
                "4fd869c8b618edd5"
            ]
        ]
    },
    {
        "id": "a9b2a57e9e4e1a7a",
        "type": "http in",
        "z": "0127f0442eaff100",
        "name": "[post] api/v1.0/transctions/p2p",
        "url": "api/v1.0/transctions/p2p",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 300,
        "y": 220,
        "wires": [
            [
                "c4894dd666641e9e"
            ]
        ]
    },
    {
        "id": "9690ad879729308e",
        "type": "catch",
        "z": "0127f0442eaff100",
        "name": "",
        "scope": null,
        "uncaught": false,
        "x": 240,
        "y": 980,
        "wires": [
            [
                "170eca90885ba555"
            ]
        ]
    },
    {
        "id": "170eca90885ba555",
        "type": "subflow:d70e53f04ea4219d",
        "z": "0127f0442eaff100",
        "name": "",
        "x": 430,
        "y": 980,
        "wires": []
    },
    {
        "id": "95a6269b84bb7837",
        "type": "inject",
        "z": "0127f0442eaff100",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"currency\":\"USD\",\"amount\":\"100.01\",\"reciver\":{\"aliasType\":\"PHONE\",\"aliasValue\":\"7678335669\"},\"sender\":{\"aliasValue\":\"380673335666\",\"aliasType\":\"PHONE\"}}",
        "payloadType": "json",
        "x": 410,
        "y": 100,
        "wires": [
            [
                "c4894dd666641e9e"
            ]
        ]
    },
    {
        "id": "804ba5cbdcd99679",
        "type": "function",
        "z": "0127f0442eaff100",
        "name": "set request ",
        "func": "const { accountNumber } = msg.payload.paymentCredentials[0]; \nmsg.payload = {\n    cardAcceptor: {\n        address: {\n            country: 'US',\n            zipCode: '94404',\n            city: 'fostr city',\n            state: 'CA'\n        },\n        idCode: '111111',\n        name: 'ABC Corp',\n        terminalId: '12345678'\n    },\n    primaryAccountNumber: accountNumber,\n    addressVerificationResults: {\n        street: '801 Metro Center Blv',\n        postalCode: '94404'\n    }\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 560,
        "wires": [
            [
                "7cc62fab146a70c2"
            ]
        ]
    },
    {
        "id": "220eefac984ee0d1",
        "type": "subflow:f7abbef9ef4f4067",
        "z": "0127f0442eaff100",
        "name": "",
        "x": 1870,
        "y": 1320,
        "wires": []
    },
    {
        "id": "073e1a22b37815ad",
        "type": "function",
        "z": "0127f0442eaff100",
        "name": "encrypt for MLE",
        "func": "const fsp = fs.promises;\nconst VISA_MLE_SERVER_CERT = env.get('VISA_MLE_SERVER_CERT');\nconst VISA_MLE_KEY = env.get('VISA_MLE_KEY');\n\nconst payloadString = JSON.stringify(msg.payload);\nconst keyStore = jose.JWK.createKeyStore();\n\nconst encProps = {\n    kid:  VISA_MLE_KEY,\n    alg: 'RSA-OAEP-256',\n    enc: 'A128GCM'\n};\n\nconst encryptionCert = await fsp.readFile(VISA_MLE_SERVER_CERT);\nconst key = await keyStore.add(encryptionCert, 'pem', encProps);\nmsg.payload = await jose.JWE.createEncrypt({\n                                            format: 'compact', \n                                            fields: { 'enc': 'A128GCM', \n                                                      'iat': Date.now()\n                                                    }\n                                          } ,key )\n                                            .update(payloadString)\n                                            .final() \nnode.send(msg);",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "jose",
                "module": "node-jose"
            },
            {
                "var": "fs",
                "module": "fs"
            }
        ],
        "x": 1400,
        "y": 1240,
        "wires": [
            []
        ]
    },
    {
        "id": "7cc62fab146a70c2",
        "type": "subflow:a19c35db171e7c08",
        "z": "0127f0442eaff100",
        "name": "validate card",
        "env": [
            {
                "name": "resource",
                "value": "pav/v1/cardvalidation",
                "type": "str"
            }
        ],
        "x": 690,
        "y": 560,
        "wires": [
            [
                "b02501b128e5071d"
            ]
        ]
    },
    {
        "id": "19dba9dd514d43fa",
        "type": "split",
        "z": "0127f0442eaff100",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "role",
        "x": 310,
        "y": 560,
        "wires": [
            [
                "804ba5cbdcd99679"
            ]
        ]
    },
    {
        "id": "0684cebe3350a1e1",
        "type": "join",
        "z": "0127f0442eaff100",
        "name": "",
        "mode": "custom",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "role",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "num",
        "reduceFixup": "",
        "x": 1090,
        "y": 560,
        "wires": [
            [
                "94d8cab90cf35a16"
            ]
        ]
    },
    {
        "id": "94d8cab90cf35a16",
        "type": "function",
        "z": "0127f0442eaff100",
        "name": "error",
        "func": "const { reciver, sender } = msg.payload\n\nlet sequence = flow.get(msg.sequenceID);\nconst different = sequence.statusCodes.toString() != [200, 200].toString();\n\nif (different) return [null, msg];\nsequence.statusCodes.length = 0;\nreturn [msg, null]; ",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1250,
        "y": 560,
        "wires": [
            [
                "d7baf271dfdb5e27"
            ],
            [
                "fdd78e84af94170e"
            ]
        ]
    },
    {
        "id": "b02501b128e5071d",
        "type": "function",
        "z": "0127f0442eaff100",
        "name": "save codes",
        "func": "const sequence = flow.get(msg.sequenceID);\nsequence.statusCodes.push(msg.statusCode);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 910,
        "y": 560,
        "wires": [
            [
                "0684cebe3350a1e1"
            ]
        ]
    },
    {
        "id": "fdd78e84af94170e",
        "type": "function",
        "z": "0127f0442eaff100",
        "name": "throw error",
        "func": "const { message } = msg.payload;\n\nconst reasons = message ? message : 'unknown visa api error'; \nmsg.statusCode = 500;\nmsg.triggered = true;\nnode.error(`Card validation was unsuccessful, ${reasons}` , msg);",
        "outputs": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1470,
        "y": 600,
        "wires": []
    },
    {
        "id": "94d3e232468ed809",
        "type": "function",
        "z": "0127f0442eaff100",
        "name": "set sequence store",
        "func": "const { amount, cuncurency, reciver, sender, currency } = msg.payload;\n\nconst TOKEN_LENGTH = 16;\nconst ALPHA = 'abcdefghijklmnopqrstuvwxyz';\nconst DIGIT = '0123456789';\nconst ALPHA_DIGIT = ALPHA + DIGIT;\n\nconst base = ALPHA_DIGIT.length;\n\nmsg.sequenceID = '';\nfor (let i = 0; i < TOKEN_LENGTH; i++) {\n    const index = Math.floor(Math.random() * base);\n    msg.sequenceID += ALPHA_DIGIT[index];\n} \n\nconst sequence = { statusCodes: [], amount, reciver, sender, currency };\n\nflow.set(msg.sequenceID, sequence);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 810,
        "y": 220,
        "wires": [
            [
                "06696da444de7fdc"
            ]
        ]
    },
    {
        "id": "90d7bb2b41bca9e7",
        "type": "subflow:a19c35db171e7c08",
        "z": "0127f0442eaff100",
        "name": "",
        "env": [
            {
                "name": "resource",
                "value": "visadirect/fundstransfer/v1/pullfundstransactions",
                "type": "str"
            }
        ],
        "x": 2140,
        "y": 1140,
        "wires": [
            [
                "168bdb7121ccb9f0"
            ]
        ]
    },
    {
        "id": "cabaf7ae976d9223",
        "type": "inject",
        "z": "0127f0442eaff100",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "sdcsdcdsc",
        "payloadType": "str",
        "x": 1780,
        "y": 1140,
        "wires": [
            [
                "6103a775f6ca8b1e"
            ]
        ]
    },
    {
        "id": "168bdb7121ccb9f0",
        "type": "debug",
        "z": "0127f0442eaff100",
        "name": "debug 15",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2360,
        "y": 1140,
        "wires": []
    },
    {
        "id": "8959f1e82aefe2d7",
        "type": "function",
        "z": "0127f0442eaff100",
        "name": "set req body",
        "func": "msg.reqBody = {\n  \"amount\": msg.amount,\n  \"localTransactionDateTime\": new Date(new Date().toLocaleString(\"en-US\", {timeZone: \"Europe/Kiev\"})).toISOString().slice(0, 19),\n  \"cardAcceptor\": {\n    \"address\": {\n      \"country\": msg.cardAcceptor.cardAcceptorCountry,\n      \"zipCode\": msg.cardAcceptor.cardAcceptorZipCode,\n      \"state\": msg.cardAcceptor.cardAcceptorState\n    },\n    \"idCode\": msg.cardAcceptor.cardAcceptorIdCode,\n    \"name\": msg.cardAcceptor.cardAcceptorName,\n    \"terminalId\": msg.cardAcceptor.cardAcceptorTerminalId\n  },\n  \"transactionIdentifier\": msg.payload.transactionIdentifier,\n  \"acquirerCountryCode\": msg.acqInfo.acquirerCountryCode,\n  \"acquiringBin\": msg.acqInfo.acquiringBin,\n  \"senderCurrencyCode\": msg.currency,\n   \"retrievalReferenceNumber\": msg.retNumber,\n  \"systemsTraceAuditNumber\": msg.traceAuditNumber,\n  \"businessApplicationId\": \"PP\",\n  \"senderPrimaryAccountNumber\": msg.senderAccountNumber,\n  \"originalDataElements\": {\n    \"transmissionDateTime\": msg.payload.transmissionDateTime,\n    \"systemsTraceAuditNumber\": msg.traceAuditNumber,\n    \"approvalCode\": msg.payload.approvalCode,\n    \"acquiringBin\": msg.acqInfo.acquiringBin\n  }\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1930,
        "y": 1440,
        "wires": [
            []
        ],
        "info": "Возвращения предств по транзакции \n\nДокументация метода - [https://developer.visa.com/capabilities/visa_direct/reference#tag/Funds-Transfer-API/operation/Create%20Reverse%20Funds%20Transaction_v1%20-%20Latest](Reverse Funds Transaction)"
    },
    {
        "id": "1214a35a6be3903a",
        "type": "comment",
        "z": "0127f0442eaff100",
        "name": "Reverse funds",
        "info": "",
        "x": 1870,
        "y": 1400,
        "wires": []
    },
    {
        "id": "6103a775f6ca8b1e",
        "type": "function",
        "z": "0127f0442eaff100",
        "name": "function 5",
        "func": "\n\n\n msg.payload =  {\n    \"surcharge\": \"11.99\",\n    \"amount\": \"124.02\",\n    \"localTransactionDateTime\": new Date(new Date().toLocaleString(\"en-US\", { timeZone: \"Europe/Kiev\" })).toISOString().slice(0, 19),\n    \"cpsAuthorizationCharacteristicsIndicator\": \"Y\",\n    \"riskAssessmentData\": {\n        \"traExemptionIndicator\": true,\n        \"trustedMerchantExemptionIndicator\": true,\n        \"scpExemptionIndicator\": true,\n        \"delegatedAuthenticationIndicator\": true,\n        \"lowValueExemptionIndicator\": true\n    },\n     \"colombiaNationalServiceData\": {\n         \"addValueTaxReturn\": \"10.00\",\n         \"taxAmountConsumption\": \"10.00\",\n         \"nationalNetReimbursementFeeBaseAmount\": \"20.00\",\n         \"addValueTaxAmount\": \"10.00\",\n         \"nationalNetMiscAmount\": \"10.00\",\n         \"countryCodeNationalService\": \"170\",\n         \"nationalChargebackReason\": \"11\",\n         \"emvTransactionIndicator\": \"1\",\n        \"nationalNetMiscAmountType\": \"A\",\n        \"costTransactionIndicator\": \"0\",\n        \"nationalReimbursementFee\": \"20.00\"\n    },\n    \"cardAcceptor\": {\n        \"address\": {\n            \"country\": \"USA\",\n            \"zipCode\": \"94404\",\n            \"county\": \"081\",\n            \"state\": \"CA\"\n        },\n        \"idCode\": \"ABCD1234ABCD123\",\n        \"name\": \"Visa Inc. USA-Foster City\",\n        \"terminalId\": \"ABCD1234\"\n    },\n    \"acquirerCountryCode\": \"840\",\n    \"acquiringBin\": \"408999\",\n    \"senderCurrencyCode\": \"USD\",\n    \"retrievalReferenceNumber\": \"330000550000\",\n    \"addressVerificationData\": {\n        \"street\": \"XYZ St\",\n        \"postalCode\": \"12345\"\n    },\n    \"cavv\": \"0700100038238906000013405823891061668252\",\n    \"systemsTraceAuditNumber\": \"451001\",\n    \"businessApplicationId\": \"AA\",\n    \"senderPrimaryAccountNumber\": \"4895142232120006\",\n    \"settlementServiceIndicator\": \"9\",\n    \"visaMerchantIdentifier\": \"73625198\",\n    \"foreignExchangeFeeTransaction\": \"11.99\",\n    \"senderCardExpiryDate\": \"2033-10\", \n    \"nationalReimbursementFee\": \"11.22\"\n}\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1960,
        "y": 1140,
        "wires": [
            [
                "90d7bb2b41bca9e7"
            ]
        ]
    },
    {
        "id": "04970cd91f19d153",
        "type": "subflow:a19c35db171e7c08",
        "z": "0127f0442eaff100",
        "name": "",
        "env": [
            {
                "name": "resource",
                "value": "pav/v1/cardvalidation",
                "type": "str"
            }
        ],
        "x": 2480,
        "y": 1340,
        "wires": [
            [
                "c50a5ec0926d64aa"
            ]
        ]
    },
    {
        "id": "643dee1b55e398ee",
        "type": "inject",
        "z": "0127f0442eaff100",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "sdcsdcdsc",
        "payloadType": "str",
        "x": 2120,
        "y": 1340,
        "wires": [
            [
                "2244261b02bdd929"
            ]
        ]
    },
    {
        "id": "c50a5ec0926d64aa",
        "type": "debug",
        "z": "0127f0442eaff100",
        "name": "debug 16",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2680,
        "y": 1340,
        "wires": []
    },
    {
        "id": "2244261b02bdd929",
        "type": "function",
        "z": "0127f0442eaff100",
        "name": "function 6",
        "func": "msg.payload = {\n    cardAcceptor: {\n        address: {\n            country: 'US',\n            zipCode: '94404',\n            city: 'fostr city',\n            state: 'CA'\n        },\n        idCode: '111111',\n        name: 'ABC Corp',\n        terminalId: '12345678'\n    },\n    primaryAccountNumber: '4000000000000003',\n    cardCurrencyCode: 'USD',\n    addressVerificationResults: {\n        street: '801 Metro Center Blv',\n        postalCode: '94404'\n    }\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2300,
        "y": 1340,
        "wires": [
            [
                "04970cd91f19d153"
            ]
        ]
    },
    {
        "id": "6b480c3912182f95",
        "type": "comment",
        "z": "0127f0442eaff100",
        "name": "Pull funds transaction",
        "info": "",
        "x": 280,
        "y": 660,
        "wires": []
    },
    {
        "id": "6aa59ad6c3ad6945",
        "type": "function",
        "z": "0127f0442eaff100",
        "name": "set request",
        "func": "const VISA_CARD_ACCEPTOR = env.get('VISA_CARD_ACCEPTOR');\nconst VISA_ACQUIRING_INFO = env.get('VISA_ACQUIRING_INFO'); \nconst VISA_RET_NUMBER = env.get('VISA_RET_NUMBER');\nconst VISA_TRACE_AUDIT_NUMBER= env.get('VISA_TRACE_AUDIT_NUMBER');\nconst VISA_BUSINESS_AUDIT_APLIACTION_ID = env.get('VISA_BUSINESS_AUDIT_APLIACTION_ID');\n\nconst cardAcceptor = JSON.parse(VISA_CARD_ACCEPTOR);\nconst acquringInfo = JSON.parse(VISA_ACQUIRING_INFO);\n\nconst { acquiringBin, acquirerCountryCode } = acquringInfo;\n\nconst { amount , sender, currency } = flow.get(msg.sequenceID);\n\nconst localTransactionDateTime =  new Date(new Date().toLocaleString('en-US', { timeZone: 'Europe/Kiev' })).toISOString().slice(0, 19);\n\nmsg.payload = {\n  retrievalReferenceNumber: VISA_RET_NUMBER,\n  businessApplicationId: VISA_BUSINESS_AUDIT_APLIACTION_ID ,\n  systemsTraceAuditNumber: VISA_TRACE_AUDIT_NUMBER,\n  localTransactionDateTime,\n  cardAcceptor,\n  acquirerCountryCode,\n  acquiringBin,\n  amount, \n  senderCurrencyCode: currency, \n  senderPrimaryAccountNumber: sender.accountNumber, \n  senderCardExpiryDate: sender.expirationDate\n}\nmsg.reqBody = {\n\n    senderCardExpiryDate: msg.senderExpiryDate\n  }\n\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 720,
        "wires": [
            [
                "57e30ba81e19c65a",
                "3681f1acadc0099e"
            ]
        ],
        "info": "Создания платежа по senderPrimaryAccountNumber\n\nДокументация метода - [https://developer.visa.com/capabilities/visa_direct/reference#tag/Funds-Transfer-API/operation/createPullFundsTransaction_v1%20-%20Latest](Pull Funds Transaction)"
    },
    {
        "id": "06696da444de7fdc",
        "type": "link out",
        "z": "0127f0442eaff100",
        "name": "",
        "mode": "link",
        "links": [
            "18573924669bde91"
        ],
        "x": 975,
        "y": 220,
        "wires": []
    },
    {
        "id": "18573924669bde91",
        "type": "link in",
        "z": "0127f0442eaff100",
        "name": "",
        "links": [
            "06696da444de7fdc"
        ],
        "x": 195,
        "y": 360,
        "wires": [
            [
                "6c371002aeb22d72"
            ]
        ]
    },
    {
        "id": "c4894dd666641e9e",
        "type": "subflow:3d8368539d02f074",
        "z": "0127f0442eaff100",
        "name": "",
        "env": [
            {
                "name": "schema",
                "value": "{\"type\":\"object\",\"properties\":{\"amount\":{\"type\":\"string\",\"pattern\":\"^[+-]?[0-9]{1,3}(?:,?[0-9]{3})*\\\\.[0-9]{2}$\"},\"currency\":{\"type\":\"string\",\"minLength\":3,\"maxLength\":3,\"pattern\":\"rnrn/^AED|AFN|ALL|AMD|ANG|AOA|ARS|AUD|AWG|AZN|BAM|BBD|BDT|BGN|BHD|BIF|BMD|BND|BOB|BRL|BSD|BTN|BWP|BYR|BZD|CAD|CDF|CHF|CLP|CNY|COP|CRC|CUC|CUP|CVE|CZK|DJF|DKK|DOP|DZD|EGP|ERN|ETB|EUR|FJD|FKP|GBP|GEL|GGP|GHS|GIP|GMD|GNF|GTQ|GYD|HKD|HNL|HRK|HTG|HUF|IDR|ILS|IMP|INR|IQD|IRR|ISK|JEP|JMD|JOD|JPY|KES|KGS|KHR|KMF|KPW|KRW|KWD|KYD|KZT|LAK|LBP|LKR|LRD|LSL|LYD|MAD|MDL|MGA|MKD|MMK|MNT|MOP|MRO|MUR|MVR|MWK|MXN|MYR|MZN|NAD|NGN|NIO|NOK|NPR|NZD|OMR|PAB|PEN|PGK|PHP|PKR|PLN|PYG|QAR|RON|RSD|RUB|RWF|SAR|SBD|SCR|SDG|SEK|SGD|SHP|SLL|SOS|SPL|SRD|STD|SVC|SYP|SZL|THB|TJS|TMT|TND|TOP|TRY|TTD|TVD|TWD|TZS|UAH|UGX|USD|UYU|UZS|VEF|VND|VUV|WST|XAF|XCD|XDR|XOF|XPF|YER|ZAR|ZMW|ZWD$/\"},\"reciver\":{\"type\":\"object\",\"properties\":{\"aliasValue\":{\"type\":\"string\",\"minLength\":9,\"maxLength\":15,\"pattern\":\"^[1-9]\\\\d{1,14}$\"}},\"required\":[\"aliasValue\"]},\"sender\":{\"type\":\"object\",\"properties\":{\"aliasValue\":{\"type\":\"string\",\"minLength\":9,\"maxLength\":15,\"pattern\":\"^[1-9]\\\\d{1,14}$\"}},\"required\":[\"aliasValue\"]}},\"required\":[\"reciver\",\"sender\"]}",
                "type": "json"
            }
        ],
        "x": 580,
        "y": 220,
        "wires": [
            [
                "94d3e232468ed809"
            ]
        ]
    },
    {
        "id": "6c371002aeb22d72",
        "type": "function",
        "z": "0127f0442eaff100",
        "name": "set request",
        "func": "const { reciver, sender }  = msg.payload;\nmsg.payload = { reciver, sender };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 360,
        "wires": [
            [
                "c9e3016dfa631c57"
            ]
        ]
    },
    {
        "id": "c9e3016dfa631c57",
        "type": "split",
        "z": "0127f0442eaff100",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "role",
        "x": 490,
        "y": 360,
        "wires": [
            [
                "83b96dca89d70abb"
            ]
        ]
    },
    {
        "id": "83b96dca89d70abb",
        "type": "subflow:a19c35db171e7c08",
        "z": "0127f0442eaff100",
        "name": "resolve alias",
        "env": [
            {
                "name": "resource",
                "value": "aliasdirectory/v1/aliases/resolve",
                "type": "str"
            }
        ],
        "x": 670,
        "y": 360,
        "wires": [
            [
                "c0e5d2ae430c9e6d"
            ]
        ]
    },
    {
        "id": "c0e5d2ae430c9e6d",
        "type": "function",
        "z": "0127f0442eaff100",
        "name": "save result",
        "func": "const { statusCode, role, sequenceID }  = msg; \nconst { paymentCredentials } = msg.payload;\n\nconst sequence = flow.get(msg.sequenceID);\nconst roleValue = sequence[role];\n\nconst result = {\n     ...sequence, \n    [role]: { ...roleValue, ...paymentCredentials[0] }  \n}\n\nsequence.statusCodes.push(statusCode);\nflow.set(msg.sequenceID, result);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 870,
        "y": 360,
        "wires": [
            [
                "d98739bb2c059605"
            ]
        ]
    },
    {
        "id": "d98739bb2c059605",
        "type": "join",
        "z": "0127f0442eaff100",
        "name": "",
        "mode": "custom",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "role",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "num",
        "reduceFixup": "",
        "x": 1030,
        "y": 360,
        "wires": [
            [
                "015864eb24882e77"
            ]
        ]
    },
    {
        "id": "015864eb24882e77",
        "type": "function",
        "z": "0127f0442eaff100",
        "name": "error",
        "func": "const { reciver, sender } = msg.payload\n\nlet sequence = flow.get(msg.sequenceID);\nconst difference = sequence.statusCodes.toString() != [200, 200].toString();\n\nif (difference) return [null, msg];\nsequence.statusCodes.length = 0;\nreturn [msg, null]; ",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1190,
        "y": 360,
        "wires": [
            [
                "95e8ee77e67d3f05"
            ],
            [
                "6d490b55aa133820"
            ]
        ]
    },
    {
        "id": "6d490b55aa133820",
        "type": "function",
        "z": "0127f0442eaff100",
        "name": "throw error",
        "func": "const { message } = msg.payload;\n\nconst reasons = message ? message : 'unknown visa api error'; \nmsg.statusCode = 500;\nmsg.triggered = true;\nnode.error(`Phone alias does not exist, ${reasons}` , msg);",
        "outputs": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1410,
        "y": 420,
        "wires": []
    },
    {
        "id": "027907d2b4abde6d",
        "type": "link in",
        "z": "0127f0442eaff100",
        "name": "",
        "links": [
            "95e8ee77e67d3f05"
        ],
        "x": 195,
        "y": 560,
        "wires": [
            [
                "19dba9dd514d43fa"
            ]
        ]
    },
    {
        "id": "95e8ee77e67d3f05",
        "type": "link out",
        "z": "0127f0442eaff100",
        "name": "",
        "mode": "link",
        "links": [
            "027907d2b4abde6d"
        ],
        "x": 1365,
        "y": 300,
        "wires": []
    },
    {
        "id": "d7baf271dfdb5e27",
        "type": "link out",
        "z": "0127f0442eaff100",
        "name": "",
        "mode": "link",
        "links": [
            "5db08ae554bc5770",
            "aa5f827f84a26599"
        ],
        "x": 1425,
        "y": 500,
        "wires": []
    },
    {
        "id": "5db08ae554bc5770",
        "type": "link in",
        "z": "0127f0442eaff100",
        "name": "",
        "links": [
            "d7baf271dfdb5e27"
        ],
        "x": 195,
        "y": 720,
        "wires": [
            [
                "6aa59ad6c3ad6945"
            ]
        ]
    },
    {
        "id": "1b1d2b567d0fb78f",
        "type": "comment",
        "z": "0127f0442eaff100",
        "name": "Validate sender and reciver card's",
        "info": "",
        "x": 310,
        "y": 500,
        "wires": []
    },
    {
        "id": "edcc4ba0bf1e9668",
        "type": "comment",
        "z": "0127f0442eaff100",
        "name": "Get information about sender and reciver by alias",
        "info": "",
        "x": 360,
        "y": 300,
        "wires": []
    },
    {
        "id": "f276163aa8b72d83",
        "type": "link out",
        "z": "0127f0442eaff100",
        "name": "",
        "mode": "link",
        "links": [
            "502dd9779708b499"
        ],
        "x": 945,
        "y": 720,
        "wires": []
    },
    {
        "id": "502dd9779708b499",
        "type": "link in",
        "z": "0127f0442eaff100",
        "name": "",
        "links": [
            "f276163aa8b72d83"
        ],
        "x": 185,
        "y": 880,
        "wires": [
            [
                "981418de9accd9c2"
            ]
        ]
    },
    {
        "id": "9780338d83ba91eb",
        "type": "comment",
        "z": "0127f0442eaff100",
        "name": "p2p money transfer",
        "info": "",
        "x": 270,
        "y": 160,
        "wires": []
    },
    {
        "id": "57e30ba81e19c65a",
        "type": "subflow:a19c35db171e7c08",
        "z": "0127f0442eaff100",
        "name": "pull funds transaction",
        "env": [
            {
                "name": "resource",
                "value": "visadirect/fundstransfer/v1/pullfundstransactions",
                "type": "str"
            }
        ],
        "x": 560,
        "y": 720,
        "wires": [
            []
        ]
    },
    {
        "id": "981418de9accd9c2",
        "type": "function",
        "z": "0127f0442eaff100",
        "name": "set request",
        "func": "\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 880,
        "wires": [
            [
                "cd800dc587b0808d"
            ]
        ]
    },
    {
        "id": "cd800dc587b0808d",
        "type": "debug",
        "z": "0127f0442eaff100",
        "name": "debug 17",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 580,
        "y": 880,
        "wires": []
    },
    {
        "id": "3681f1acadc0099e",
        "type": "debug",
        "z": "0127f0442eaff100",
        "name": "debug 20",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 500,
        "y": 640,
        "wires": []
    },
    {
        "id": "dd135725.e41be8",
        "type": "http in",
        "z": "243cf85e.3e3af8",
        "name": "",
        "url": "/sendMoney",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 150,
        "y": 400,
        "wires": [
            [
                "9ddbd012.1c81b",
                "817d7d8c.cadcd"
            ]
        ]
    },
    {
        "id": "4815e363.2c4b8c",
        "type": "http response",
        "z": "243cf85e.3e3af8",
        "name": "",
        "statusCode": "401",
        "headers": {},
        "x": 920,
        "y": 420,
        "wires": []
    },
    {
        "id": "9ddbd012.1c81b",
        "type": "debug",
        "z": "243cf85e.3e3af8",
        "name": "/createTransaction",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 390,
        "y": 440,
        "wires": []
    },
    {
        "id": "50c1d118.afbad",
        "type": "switch",
        "z": "243cf85e.3e3af8",
        "name": "isTokenValid",
        "property": "req.headers.authorization",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "authorization",
                "vt": "msg"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 530,
        "y": 400,
        "wires": [
            [
                "6615d186.b7842"
            ],
            [
                "afaef9ec.05b8f8"
            ]
        ]
    },
    {
        "id": "afaef9ec.05b8f8",
        "type": "function",
        "z": "243cf85e.3e3af8",
        "name": "error_description",
        "func": "msg.payload = {\n    \"error_code\": 401,\n    \"error_description\": \"Invalid authorization token\"\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 730,
        "y": 420,
        "wires": [
            [
                "4815e363.2c4b8c"
            ]
        ]
    },
    {
        "id": "6615d186.b7842",
        "type": "change",
        "z": "243cf85e.3e3af8",
        "name": "set params",
        "rules": [
            {
                "t": "set",
                "p": "senderPhone",
                "pt": "msg",
                "to": "payload.senderPhone",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "receiverPhone",
                "pt": "msg",
                "to": "payload.receiverPhone",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "currency",
                "pt": "msg",
                "to": "payload.currency",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "amount",
                "pt": "msg",
                "to": "payload.amount",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 710,
        "y": 380,
        "wires": [
            [
                "6e7e2adb.438904"
            ]
        ]
    },
    {
        "id": "5c7c0560.094c4c",
        "type": "comment",
        "z": "243cf85e.3e3af8",
        "name": "Get information(sender) by alias",
        "info": "",
        "x": 950,
        "y": 340,
        "wires": []
    },
    {
        "id": "c0fd8646.084f48",
        "type": "link out",
        "z": "243cf85e.3e3af8",
        "name": "",
        "mode": "link",
        "links": [
            "4f262db5.50c594"
        ],
        "x": 1195,
        "y": 380,
        "wires": []
    },
    {
        "id": "4f262db5.50c594",
        "type": "link in",
        "z": "243cf85e.3e3af8",
        "name": "",
        "links": [
            "c0fd8646.084f48",
            "394c40b4.f96e8"
        ],
        "x": 395,
        "y": 560,
        "wires": [
            [
                "7ce0a5a0.69d9fc"
            ]
        ]
    },
    {
        "id": "7922b9ee.798908",
        "type": "link out",
        "z": "243cf85e.3e3af8",
        "name": "",
        "mode": "link",
        "links": [
            "a6642921.1ae898"
        ],
        "x": 815,
        "y": 540,
        "wires": []
    },
    {
        "id": "a6642921.1ae898",
        "type": "link in",
        "z": "243cf85e.3e3af8",
        "name": "",
        "links": [
            "7922b9ee.798908"
        ],
        "x": 395,
        "y": 740,
        "wires": [
            [
                "5bca0972.5cdd48"
            ]
        ]
    },
    {
        "id": "d795d811.ceb8c8",
        "type": "link out",
        "z": "243cf85e.3e3af8",
        "name": "",
        "links": [
            "1be18cd5.04a8c3"
        ],
        "x": 1215,
        "y": 700,
        "wires": []
    },
    {
        "id": "1be18cd5.04a8c3",
        "type": "link in",
        "z": "243cf85e.3e3af8",
        "name": "",
        "links": [
            "d795d811.ceb8c8"
        ],
        "x": 395,
        "y": 920,
        "wires": [
            [
                "c04d77ad.a0d888"
            ]
        ]
    },
    {
        "id": "6e641f44.b1f75",
        "type": "http response",
        "z": "243cf85e.3e3af8",
        "name": "",
        "statusCode": "200",
        "headers": {},
        "x": 1560,
        "y": 880,
        "wires": []
    },
    {
        "id": "464f9068.4e22c",
        "type": "function",
        "z": "243cf85e.3e3af8",
        "name": "description",
        "func": "msg.payload = {\n    \"description\": \"Funds transactions was successful\"\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1390,
        "y": 880,
        "wires": [
            [
                "6e641f44.b1f75"
            ]
        ]
    },
    {
        "id": "9237443.08bb4b8",
        "type": "http response",
        "z": "243cf85e.3e3af8",
        "name": "",
        "statusCode": "200",
        "headers": {},
        "x": 1140,
        "y": 1040,
        "wires": []
    },
    {
        "id": "d39ddf3a.0e9b7",
        "type": "function",
        "z": "243cf85e.3e3af8",
        "name": "description",
        "func": "msg.payload = {\n    \"description\": \"Reverse funds transaction was successful\"\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 970,
        "y": 1040,
        "wires": [
            [
                "9237443.08bb4b8"
            ]
        ]
    },
    {
        "id": "c9328a27.4f65d8",
        "type": "link out",
        "z": "243cf85e.3e3af8",
        "name": "",
        "links": [
            "a984c766.adb968"
        ],
        "x": 1335,
        "y": 920,
        "wires": []
    },
    {
        "id": "a984c766.adb968",
        "type": "link in",
        "z": "243cf85e.3e3af8",
        "name": "",
        "links": [
            "c9328a27.4f65d8"
        ],
        "x": 395,
        "y": 1060,
        "wires": [
            [
                "6c792270.5fddec"
            ]
        ]
    },
    {
        "id": "19cbfaf3.e14385",
        "type": "http response",
        "z": "243cf85e.3e3af8",
        "name": "",
        "statusCode": "400",
        "headers": {},
        "x": 1180,
        "y": 1080,
        "wires": []
    },
    {
        "id": "612e54ff.646e2c",
        "type": "http response",
        "z": "243cf85e.3e3af8",
        "name": "",
        "statusCode": "400",
        "headers": {},
        "x": 1160,
        "y": 940,
        "wires": []
    },
    {
        "id": "9b0a3a4f.9b6638",
        "type": "http response",
        "z": "243cf85e.3e3af8",
        "name": "",
        "statusCode": "400",
        "headers": {},
        "x": 1080,
        "y": 760,
        "wires": []
    },
    {
        "id": "47b625eb.d4f16c",
        "type": "http response",
        "z": "243cf85e.3e3af8",
        "name": "",
        "statusCode": "400",
        "headers": {},
        "x": 1460,
        "y": 740,
        "wires": []
    },
    {
        "id": "349d5d2.153f0a2",
        "type": "http response",
        "z": "243cf85e.3e3af8",
        "name": "",
        "statusCode": "400",
        "headers": {},
        "x": 1440,
        "y": 420,
        "wires": []
    },
    {
        "id": "2d7dc905.6197c6",
        "type": "function",
        "z": "243cf85e.3e3af8",
        "name": "error_description",
        "func": "msg.payload = {\n    \"error_code\": msg.status,\n    \"error_status\": msg.error.errorCode,\n    \"error_description\": msg.error.message\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1270,
        "y": 420,
        "wires": [
            [
                "349d5d2.153f0a2"
            ]
        ]
    },
    {
        "id": "9861cd6d.132b8",
        "type": "http response",
        "z": "243cf85e.3e3af8",
        "name": "",
        "statusCode": "400",
        "headers": {},
        "x": 1060,
        "y": 580,
        "wires": []
    },
    {
        "id": "6d9698d4.a89d58",
        "type": "comment",
        "z": "243cf85e.3e3af8",
        "name": "Send Money",
        "info": "Request body must contains \n\n    - senderPhone,\n    - receiverPhone\n    - currency\n    - amount\n \nAlso you must add in enviroment params information about \n\n    - card acceptor \n    - acquiring \n    - trace audit number\n    - business app id\n    - retrieval reference number",
        "x": 130,
        "y": 360,
        "wires": []
    },
    {
        "id": "6e7e2adb.438904",
        "type": "function",
        "z": "243cf85e.3e3af8",
        "name": "set req body",
        "func": "msg.reqBody = {\n    \"alias\":msg.senderPhone,\n    \"businessApplicationId\": msg.businessApplicationId,\n    \"aliasType\":\"01\"\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 890,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "7ce0a5a0.69d9fc",
        "type": "function",
        "z": "243cf85e.3e3af8",
        "name": "set req body",
        "func": "msg.senderAccountNumber = msg.payload.recipientPrimaryAccountNumber\nmsg.senderExpiryDate = msg.payload.expiryDate\n\nmsg.reqBody = {\n    \"alias\":msg.receiverPhone,\n    \"businessApplicationId\": msg.businessApplicationId,\n    \"aliasType\":\"01\"\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "5bca0972.5cdd48",
        "type": "function",
        "z": "243cf85e.3e3af8",
        "name": "set req body",
        "func": "msg.recieverAccountNumber = msg.payload.recipientPrimaryAccountNumber\n\nmsg.reqBody = {\n  \"cardAcceptor\": {\n    \"address\": {\n      \"country\": msg.cardAcceptor.cardAcceptorCountry,\n      \"zipCode\": msg.cardAcceptor.cardAcceptorZipCode,\n      \"city\": msg.cardAcceptor.cardAcceptorCity,\n      \"state\": msg.cardAcceptor.cardAcceptorState\n    },\n    \"idCode\": msg.cardAcceptor.cardAcceptorIdCode,\n    \"name\": msg.cardAcceptor.cardAcceptorName,\n    \"terminalId\": msg.cardAcceptor.cardAcceptorTerminalId\n  },\n  \"primaryAccountNumber\": msg.recieverAccountNumber,\n  \"addressVerificationResults\": {\n    \"postalCode\": msg.cardAcceptor.cardAcceptorZipCode\n  }\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 740,
        "wires": [
            []
        ]
    },
    {
        "id": "e1189ab8.6e7298",
        "type": "function",
        "z": "243cf85e.3e3af8",
        "name": "set req body",
        "func": "msg.reqBody = {\n  \"cardAcceptor\": {\n    \"address\": {\n      \"country\": msg.cardAcceptor.cardAcceptorCountry,\n      \"zipCode\": msg.cardAcceptor.cardAcceptorZipCode,\n      \"city\": msg.cardAcceptor.cardAcceptorCity,\n      \"state\": msg.cardAcceptor.cardAcceptorState\n    },\n    \"idCode\": msg.cardAcceptor.cardAcceptorIdCode,\n    \"name\": msg.cardAcceptor.cardAcceptorName,\n    \"terminalId\": msg.cardAcceptor.cardAcceptorTerminalId\n  },\n  \"primaryAccountNumber\": msg.senderAccountNumber,\n  \"addressVerificationResults\": {\n    \"postalCode\": msg.cardAcceptor.cardAcceptorZipCode\n  }\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 890,
        "y": 720,
        "wires": [
            []
        ]
    },
    {
        "id": "2ac9c72b.082818",
        "type": "comment",
        "z": "243cf85e.3e3af8",
        "name": "Card Validation",
        "info": "",
        "x": 460,
        "y": 700,
        "wires": []
    },
    {
        "id": "1f50833f.67779d",
        "type": "comment",
        "z": "243cf85e.3e3af8",
        "name": "Get information(receiver) by alias",
        "info": "",
        "x": 510,
        "y": 520,
        "wires": []
    },
    {
        "id": "c2c7a91a.c37548",
        "type": "comment",
        "z": "243cf85e.3e3af8",
        "name": "Create transaction",
        "info": "",
        "x": 350,
        "y": 880,
        "wires": []
    },
    {
        "id": "c04d77ad.a0d888",
        "type": "function",
        "z": "243cf85e.3e3af8",
        "name": "set req body ",
        "func": "//msg.senderAccountNumber = \"4895142232120006\"\n//msg.senderExpiryDate = \"2015-10\"\n\nmsg.reqBody = {\n  \"amount\": msg.amount,\n  \"localTransactionDateTime\": new Date(new Date().toLocaleString(\"en-US\", {timeZone: \"Europe/Kiev\"})).toISOString().slice(0, 19),\n  \"cardAcceptor\": {\n    \"address\": {\n      \"country\": msg.cardAcceptor.cardAcceptorCountry,\n      \"zipCode\": msg.cardAcceptor.cardAcceptorZipCode,\n      \"state\": msg.cardAcceptor.cardAcceptorState\n    },\n    \"idCode\": msg.cardAcceptor.cardAcceptorIdCode,\n    \"name\": msg.cardAcceptor.cardAcceptorName,\n    \"terminalId\": msg.cardAcceptor.cardAcceptorTerminalId\n  },\n  \"acquirerCountryCode\": msg.acqInfo.acquirerCountryCode,\n  \"acquiringBin\": msg.acqInfo.acquiringBin,\n  \"senderCurrencyCode\": msg.currency,\n  \"retrievalReferenceNumber\": msg.retNumber,\n  \"systemsTraceAuditNumber\": msg.traceAuditNumber,\n  \"businessApplicationId\": msg.businessApplicationId,\n  \"senderPrimaryAccountNumber\": msg.senderAccountNumber,\n  \"senderCardExpiryDate\": msg.senderExpiryDate\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 920,
        "wires": [
            []
        ],
        "info": "Создания платежа по senderPrimaryAccountNumber\n\nДокументация метода - [https://developer.visa.com/capabilities/visa_direct/reference#tag/Funds-Transfer-API/operation/createPullFundsTransaction_v1%20-%20Latest](Pull Funds Transaction)"
    },
    {
        "id": "1b299ef5.0f0681",
        "type": "function",
        "z": "243cf85e.3e3af8",
        "name": "set req body ",
        "func": "//msg.senderAccountNumber = \"4653459515756154\"\n//msg.recieverAccountNumber =  \"4957030420210496\"\n\nmsg.reqBody = {\n    \"amount\": msg.amount,\n    \"localTransactionDateTime\": new Date(new Date().toLocaleString(\"en-US\", { timeZone: \"Europe/Kiev\" })).toISOString().slice(0, 19),\n    \"recipientPrimaryAccountNumber\": msg.recieverAccountNumber,\n    \"cardAcceptor\": {\n        \"address\": {\n            \"country\": msg.cardAcceptor.cardAcceptorCountry,\n            \"zipCode\": msg.cardAcceptor.cardAcceptorZipCode,\n            \"state\": msg.cardAcceptor.cardAcceptorState\n        },\n        \"idCode\": msg.cardAcceptor.cardAcceptorIdCode,\n        \"name\": msg.cardAcceptor.cardAcceptorName,\n        \"terminalId\": msg.cardAcceptor.cardAcceptorTerminalId\n    },\n    \"acquirerCountryCode\": msg.acqInfo.acquirerCountryCode,\n    \"acquiringBin\": msg.acqInfo.acquiringBin,\n    \"transactionCurrencyCode\": msg.currency,\n    \"retrievalReferenceNumber\": msg.retNumber,\n    \"systemsTraceAuditNumber\": msg.traceAuditNumber,\n    \"businessApplicationId\": msg.businessApplicationId,\n    \"senderAccountNumber\": msg.senderAccountNumber\n\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 950,
        "y": 900,
        "wires": [
            []
        ],
        "info": "Проведение платежа по senderPrimaryAccountNumber\n\nДокументация метода - [https://developer.visa.com/capabilities/visa_direct/reference#tag/Funds-Transfer-API/operation/createPushFundsTransaction_v1%20-%20Latest](Push Funds Transaction)"
    },
    {
        "id": "6c792270.5fddec",
        "type": "function",
        "z": "243cf85e.3e3af8",
        "name": "set req body",
        "func": "msg.reqBody = {\n  \"amount\": msg.amount,\n  \"localTransactionDateTime\": new Date(new Date().toLocaleString(\"en-US\", {timeZone: \"Europe/Kiev\"})).toISOString().slice(0, 19),\n  \"cardAcceptor\": {\n    \"address\": {\n      \"country\": msg.cardAcceptor.cardAcceptorCountry,\n      \"zipCode\": msg.cardAcceptor.cardAcceptorZipCode,\n      \"state\": msg.cardAcceptor.cardAcceptorState\n    },\n    \"idCode\": msg.cardAcceptor.cardAcceptorIdCode,\n    \"name\": msg.cardAcceptor.cardAcceptorName,\n    \"terminalId\": msg.cardAcceptor.cardAcceptorTerminalId\n  },\n  \"transactionIdentifier\": msg.payload.transactionIdentifier,\n  \"acquirerCountryCode\": msg.acqInfo.acquirerCountryCode,\n  \"acquiringBin\": msg.acqInfo.acquiringBin,\n  \"senderCurrencyCode\": msg.currency,\n   \"retrievalReferenceNumber\": msg.retNumber,\n  \"systemsTraceAuditNumber\": msg.traceAuditNumber,\n  \"businessApplicationId\": \"PP\",\n  \"senderPrimaryAccountNumber\": msg.senderAccountNumber,\n  \"originalDataElements\": {\n    \"transmissionDateTime\": msg.payload.transmissionDateTime,\n    \"systemsTraceAuditNumber\": msg.traceAuditNumber,\n    \"approvalCode\": msg.payload.approvalCode,\n    \"acquiringBin\": msg.acqInfo.acquiringBin\n  }\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 510,
        "y": 1060,
        "wires": [
            []
        ],
        "info": "Возвращения предств по транзакции \n\nДокументация метода - [https://developer.visa.com/capabilities/visa_direct/reference#tag/Funds-Transfer-API/operation/Create%20Reverse%20Funds%20Transaction_v1%20-%20Latest](Reverse Funds Transaction)"
    },
    {
        "id": "7a98b81c.8c65b8",
        "type": "comment",
        "z": "243cf85e.3e3af8",
        "name": "Reverse funds",
        "info": "",
        "x": 450,
        "y": 1020,
        "wires": []
    },
    {
        "id": "447dac79.35a844",
        "type": "debug",
        "z": "243cf85e.3e3af8",
        "name": "API response",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1250,
        "y": 340,
        "wires": []
    },
    {
        "id": "38970b1f.383c64",
        "type": "debug",
        "z": "243cf85e.3e3af8",
        "name": "API response",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 870,
        "y": 500,
        "wires": []
    },
    {
        "id": "42f6721e.bc600c",
        "type": "debug",
        "z": "243cf85e.3e3af8",
        "name": "API response",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 890,
        "y": 680,
        "wires": []
    },
    {
        "id": "6ea14557.92ef0c",
        "type": "debug",
        "z": "243cf85e.3e3af8",
        "name": "API response",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1266.6666259765625,
        "y": 661.111083984375,
        "wires": []
    },
    {
        "id": "90f12691.cc19c8",
        "type": "debug",
        "z": "243cf85e.3e3af8",
        "name": "API response",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 950,
        "y": 860,
        "wires": []
    },
    {
        "id": "8c0dbb54.77faf8",
        "type": "debug",
        "z": "243cf85e.3e3af8",
        "name": "API response",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1390,
        "y": 840,
        "wires": []
    },
    {
        "id": "937a4fd4.521a",
        "type": "debug",
        "z": "243cf85e.3e3af8",
        "name": "API response",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 970,
        "y": 1000,
        "wires": []
    },
    {
        "id": "817d7d8c.cadcd",
        "type": "function",
        "z": "243cf85e.3e3af8",
        "name": "get envs",
        "func": "msg.baseUrl = env.get(\"VISA_API_URL\")\nmsg.authorization = env.get(\"AUTH_TOKEN\")\nmsg.sharedSecret = env.get(\"SHARED_SECRET\")\nmsg.apiKey = env.get(\"API_KEY\")\nmsg.host = env.get(\"HOST\")\n\nmsg.cardAcceptor = JSON.parse(env.get(\"CARD_ACCEPTOR\"))\nmsg.acqInfo = JSON.parse(env.get(\"ACQUIRING_INFO\"))\n\nmsg.retNumber = env.get(\"RET_NUMBER\")\nmsg.traceAuditNumber = env.get(\"TRACE_AUDIT_NUMBER\")\nmsg.businessApplicationId = env.get(\"BUSINESS_APP_ID\")\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 400,
        "wires": [
            [
                "50c1d118.afbad"
            ]
        ]
    },
    {
        "id": "3b32157e.8c295a",
        "type": "function",
        "z": "243cf85e.3e3af8",
        "name": "error_description",
        "func": "msg.payload = {\n    \"error_code\": msg.status,\n    \"error_status\": msg.error.errorCode,\n    \"error_description\": msg.error.message\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 890,
        "y": 580,
        "wires": [
            [
                "9861cd6d.132b8"
            ]
        ]
    },
    {
        "id": "27c79eda.38d382",
        "type": "function",
        "z": "243cf85e.3e3af8",
        "name": "error_description",
        "func": "msg.payload = {\n    \"error_code\": msg.status,\n    \"error_status\": msg.error.errorCode,\n    \"error_description\": msg.error.message\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 910,
        "y": 760,
        "wires": [
            [
                "9b0a3a4f.9b6638"
            ]
        ]
    },
    {
        "id": "308902f1.b3f36e",
        "type": "function",
        "z": "243cf85e.3e3af8",
        "name": "error_description",
        "func": "msg.payload = {\n    \"error_code\": msg.status,\n    \"error_status\": msg.error.errorCode,\n    \"error_description\": msg.error.message\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1290,
        "y": 740,
        "wires": [
            [
                "47b625eb.d4f16c"
            ]
        ]
    },
    {
        "id": "f540992e.6e7538",
        "type": "function",
        "z": "243cf85e.3e3af8",
        "name": "error_description",
        "func": "msg.payload = {\n    \"error_code\": msg.status,\n    \"error_status\": msg.error.errorCode,\n    \"error_description\": msg.error.message\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 970,
        "y": 940,
        "wires": [
            [
                "612e54ff.646e2c"
            ]
        ]
    },
    {
        "id": "33f6dd29.68d912",
        "type": "function",
        "z": "243cf85e.3e3af8",
        "name": "error_description",
        "func": "msg.payload = {\n    \"error_code\": msg.status,\n    \"error_status\": msg.error.errorCode,\n    \"error_description\": msg.error.message\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 990,
        "y": 1080,
        "wires": [
            [
                "19cbfaf3.e14385"
            ]
        ]
    }
]