[
    {
        "id": "412669072e03744e",
        "type": "tab",
        "label": "/aliases",
        "disabled": false,
        "info": ""
    },
    {
        "id": "0127f0442eaff100",
        "type": "tab",
        "label": "/transactions",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "3d8368539d02f074",
        "type": "subflow",
        "name": "json schema validator",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 40,
                "y": 80,
                "wires": [
                    {
                        "id": "9e44cfa7fa94eaa0"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 680,
                "y": 80,
                "wires": [
                    {
                        "id": "9e44cfa7fa94eaa0",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "schema",
                "type": "json",
                "value": "{}",
                "ui": {
                    "icon": "font-awesome/fa-list-alt",
                    "type": "input",
                    "opts": {
                        "types": [
                            "json"
                        ]
                    }
                }
            }
        ],
        "meta": {},
        "color": "#3FADB5",
        "icon": "node-red/parser-json.svg"
    },
    {
        "id": "d70e53f04ea4219d",
        "type": "subflow",
        "name": "error handler",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 100,
                "y": 260,
                "wires": [
                    {
                        "id": "ef363de3347b746e"
                    }
                ]
            }
        ],
        "out": [],
        "env": [],
        "meta": {},
        "color": "#eb6363",
        "icon": "font-awesome/fa-warning"
    },
    {
        "id": "a19c35db171e7c08",
        "type": "subflow",
        "name": "visa api",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 140,
                "y": 140,
                "wires": [
                    {
                        "id": "f30d1578157685b0"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 900,
                "y": 140,
                "wires": [
                    {
                        "id": "c6801ec5417f1bb9",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "resource",
                "type": "str",
                "value": ""
            },
            {
                "name": "method",
                "type": "str",
                "value": "POST"
            },
            {
                "name": "query",
                "type": "str",
                "value": ""
            }
        ],
        "meta": {},
        "color": "#359df3",
        "icon": "font-awesome/fa-credit-card"
    },
    {
        "id": "f7abbef9ef4f4067",
        "type": "subflow",
        "name": "Misc",
        "info": "",
        "category": "",
        "in": [],
        "out": [],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "84e59769f7f05b82",
        "type": "tls-config",
        "name": "Visa configuration",
        "cert": "${VISA_AUTH_CERT}",
        "key": "${VISA_AUTH_PRIVATE_KEY}",
        "ca": "",
        "certname": "",
        "keyname": "",
        "caname": "",
        "servername": "",
        "verifyservercert": false,
        "alpnprotocol": ""
    },
    {
        "id": "9e44cfa7fa94eaa0",
        "type": "function",
        "z": "3d8368539d02f074",
        "name": "alias validation",
        "func": "const ajv = new Ajv({ strict: false});\n\nconst schema = env.get('schema');\nconst validate = ajv.compile(schema);\n\nif (validate(msg.payload)) return msg;\nnode.warn(validate.errors);\nmsg.statusCode = 400;\nmsg.triggered = true;\nnode.error(`Validation error`, msg);",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "Ajv",
                "module": "ajv"
            }
        ],
        "x": 320,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "ef363de3347b746e",
        "type": "switch",
        "z": "d70e53f04ea4219d",
        "name": "type error",
        "property": "triggered",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "undefined",
                "vt": "jsonata"
            },
            {
                "t": "true"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 260,
        "y": 260,
        "wires": [
            [
                "471897e05182350b",
                "7c05797abff8208c"
            ],
            [
                "007e7181347da3a3",
                "994754c96bc9da1e"
            ]
        ]
    },
    {
        "id": "64c993181fda90ee",
        "type": "http response",
        "z": "d70e53f04ea4219d",
        "name": "",
        "statusCode": "500",
        "headers": {
            "content-type": "application/json"
        },
        "x": 660,
        "y": 200,
        "wires": []
    },
    {
        "id": "471897e05182350b",
        "type": "change",
        "z": "d70e53f04ea4219d",
        "name": "set responce",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"message\":\"Internal server error\",\"status\":\"500\"}",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "statusCode",
                "pt": "msg",
                "to": "500",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 470,
        "y": 200,
        "wires": [
            [
                "64c993181fda90ee"
            ]
        ]
    },
    {
        "id": "007e7181347da3a3",
        "type": "change",
        "z": "d70e53f04ea4219d",
        "name": "set responce",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{}",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "payload.message",
                "pt": "msg",
                "to": "error.message",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload.status",
                "pt": "msg",
                "to": "statusCode",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 470,
        "y": 320,
        "wires": [
            [
                "a243132f1a50ae62"
            ]
        ]
    },
    {
        "id": "a243132f1a50ae62",
        "type": "http response",
        "z": "d70e53f04ea4219d",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 650,
        "y": 320,
        "wires": []
    },
    {
        "id": "994754c96bc9da1e",
        "type": "debug",
        "z": "d70e53f04ea4219d",
        "name": "debug 11",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 320,
        "y": 420,
        "wires": []
    },
    {
        "id": "7c05797abff8208c",
        "type": "debug",
        "z": "d70e53f04ea4219d",
        "name": "debug 12",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 340,
        "y": 120,
        "wires": []
    },
    {
        "id": "c6801ec5417f1bb9",
        "type": "http request",
        "z": "a19c35db171e7c08",
        "name": "",
        "method": "use",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "84e59769f7f05b82",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 710,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "f30d1578157685b0",
        "type": "function",
        "z": "a19c35db171e7c08",
        "name": "set request",
        "func": "const VISA_HOST =  env.get('VISA_HOST');\nconst VISA_AUTH_ID = env.get('VISA_AUTH_ID');\nconst VISA_AUTH_PASSWORD = env.get('VISA_AUTH_PASSWORD');\n\nconst resource = env.get('resource');\nconst query = env.get('query');  \n\nconst token = Buffer.from(VISA_AUTH_ID + ':' + VISA_AUTH_PASSWORD, 'binary' ).toString('base64');  \n\nmsg.headers = {\n    'Authorization': 'Basic ' + token,\n    'Content-Type': 'application/json;', \n    'Accept': 'application/json;' \n};\n\nmsg.method = env.get('method');\nmsg.url = VISA_HOST + resource + query;\nreturn msg\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 140,
        "wires": [
            [
                "c6801ec5417f1bb9"
            ]
        ]
    },
    {
        "id": "3674ea7e249b8b9a",
        "type": "http response",
        "z": "f7abbef9ef4f4067",
        "name": "",
        "statusCode": "201",
        "headers": {
            "content-type": "application/json"
        },
        "x": 400,
        "y": 360,
        "wires": [],
        "icon": "font-awesome/fa-bank"
    },
    {
        "id": "3dfda62830f18116",
        "type": "function",
        "z": "f7abbef9ef4f4067",
        "name": "throw error",
        "func": "const { id } = msg.parts;\nconst { statusCode } = msg;\n\nconst sequence = flow.get('sequences').get(id);\n\nif (statusCode != 200) {\n    if (sequence.reject) {\n        return [null , null];\n    } else {\n        return [null , msg ]   \n    }\n};\nreturn msg;",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 460,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "19522032b2dff8e5",
        "type": "join",
        "z": "f7abbef9ef4f4067",
        "name": "",
        "mode": "auto",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": "false",
        "timeout": "",
        "count": "",
        "reduceRight": false,
        "x": 590,
        "y": 460,
        "wires": [
            []
        ]
    },
    {
        "id": "9c033e017bafe395",
        "type": "change",
        "z": "f7abbef9ef4f4067",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload.statusCode",
                "pt": "msg",
                "to": "statusCode",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 500,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "3edd8d6bc2dbae70",
        "type": "subflow:a19c35db171e7c08",
        "z": "f7abbef9ef4f4067",
        "name": "",
        "env": [
            {
                "name": "resource",
                "value": "visaaliasdirectory/v1/resolve",
                "type": "str"
            }
        ],
        "x": 820,
        "y": 280,
        "wires": [
            [
                "65b96cd106f07a9b"
            ]
        ]
    },
    {
        "id": "65b96cd106f07a9b",
        "type": "switch",
        "z": "f7abbef9ef4f4067",
        "name": "error",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "200",
                "vt": "num"
            },
            {
                "t": "neq",
                "v": "200",
                "vt": "num"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 990,
        "y": 280,
        "wires": [
            [
                "d03d258d26fbbc36"
            ],
            []
        ]
    },
    {
        "id": "db0e8407f97d1cac",
        "type": "function",
        "z": "f7abbef9ef4f4067",
        "name": "s",
        "func": "const { id, key } = msg.parts;\nconst sequences = flow.get('sequences');\nsequences.set(id, { key, rejected: false }); \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "fd2c6d9bd7ac124e",
        "type": "function",
        "z": "f7abbef9ef4f4067",
        "name": "function 3",
        "func": "",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 860,
        "y": 400,
        "wires": [
            []
        ]
    },
    {
        "id": "c362b989.954ae8",
        "type": "http in",
        "z": "f7abbef9ef4f4067",
        "name": "",
        "url": "/hello-cookie",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 360,
        "y": 80,
        "wires": [
            [
                "21ddf71f.d00518"
            ]
        ]
    },
    {
        "id": "21ddf71f.d00518",
        "type": "function",
        "z": "f7abbef9ef4f4067",
        "name": "Format cookies",
        "func": "msg.payload = JSON.stringify(msg.req.cookies,null,4);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 570,
        "y": 80,
        "wires": [
            [
                "f3aa98c1.befc18"
            ]
        ]
    },
    {
        "id": "f3aa98c1.befc18",
        "type": "template",
        "z": "f7abbef9ef4f4067",
        "name": "page",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<html>\n    <head></head>\n    <body>\n        <h1>Cookies</h1>\n        <p></p><a href=\"hello-cookie/add\">Add a cookie</a> &bull; <a href=\"hello-cookie/clear\">Clear cookies</a></p>\n        <pre>{{ payload }}</pre>\n    </body>\n</html>",
        "x": 760,
        "y": 80,
        "wires": [
            [
                "f52e2880.180968"
            ]
        ]
    },
    {
        "id": "f52e2880.180968",
        "type": "http response",
        "z": "f7abbef9ef4f4067",
        "name": "",
        "x": 980,
        "y": 80,
        "wires": []
    },
    {
        "id": "9a2a9a4.0fc0768",
        "type": "change",
        "z": "f7abbef9ef4f4067",
        "name": "Redirect to /hello-cookie",
        "rules": [
            {
                "t": "set",
                "p": "statusCode",
                "pt": "msg",
                "to": "302",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "headers",
                "pt": "msg",
                "to": "{}",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "headers.location",
                "pt": "msg",
                "to": "/hello-cookie",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 780,
        "y": 140,
        "wires": [
            [
                "f52e2880.180968"
            ]
        ]
    },
    {
        "id": "afefb90.53dcf48",
        "type": "function",
        "z": "f7abbef9ef4f4067",
        "name": "Add a cookie",
        "func": "msg.cookies = { };\nmsg.cookies[\"demo-\"+(Math.floor(Math.random()*1000))] = Date.now();\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 560,
        "y": 120,
        "wires": [
            [
                "9a2a9a4.0fc0768"
            ]
        ]
    },
    {
        "id": "d5205a2c.db9018",
        "type": "function",
        "z": "f7abbef9ef4f4067",
        "name": "Clear cookies",
        "func": "// Find demo cookies and clear them\nvar cookieNames = Object.keys(msg.req.cookies).filter(function(cookieName) { return /^demo-/.test(cookieName);});\nmsg.cookies = {};\n\ncookieNames.forEach(function(cookieName) {\n    msg.cookies[cookieName] = null;\n});\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 570,
        "y": 160,
        "wires": [
            [
                "9a2a9a4.0fc0768"
            ]
        ]
    },
    {
        "id": "fda60c66.04975",
        "type": "http in",
        "z": "f7abbef9ef4f4067",
        "name": "",
        "url": "/hello-cookie/add",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 370,
        "y": 120,
        "wires": [
            [
                "afefb90.53dcf48"
            ]
        ]
    },
    {
        "id": "35285a76.1f8636",
        "type": "http in",
        "z": "f7abbef9ef4f4067",
        "name": "",
        "url": "/hello-cookie/clear",
        "method": "get",
        "swaggerDoc": "",
        "x": 370,
        "y": 160,
        "wires": [
            [
                "d5205a2c.db9018"
            ]
        ]
    },
    {
        "id": "d03d258d26fbbc36",
        "type": "delay",
        "z": "f7abbef9ef4f4067",
        "name": "",
        "pauseType": "delay",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1140,
        "y": 220,
        "wires": [
            [
                "617e5f2675311091"
            ]
        ]
    },
    {
        "id": "617e5f2675311091",
        "type": "debug",
        "z": "f7abbef9ef4f4067",
        "name": "debug 7",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1320,
        "y": 260,
        "wires": []
    },
    {
        "id": "f83075e5cc12da3c",
        "type": "http in",
        "z": "412669072e03744e",
        "name": "[post] api/v1.0/aliases",
        "url": "api/v1.0/aliases",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 160,
        "y": 320,
        "wires": [
            [
                "add41942c9b6ea29"
            ]
        ],
        "icon": "font-awesome/fa-bank"
    },
    {
        "id": "add41942c9b6ea29",
        "type": "subflow:3d8368539d02f074",
        "z": "412669072e03744e",
        "name": "validate alias",
        "env": [
            {
                "name": "schema",
                "value": "{\"type\":\"object\",\"properties\":{\"aliasType\":{\"type\":\"string\",\"const\":\"01\"},\"alias\":{\"type\":\"string\",\"minLength\":9,\"maxLength\":15,\"pattern\":\"^[1-9]\\\\d{1,14}$\"},\"issuerName\":{\"type\":\"string\"},\"recipientFirstName\":{\"type\":\"string\"},\"recipientLastName\":{\"type\":\"string\"},\"guid\":{\"type\":\"string\",\"pattern\":\"[^\\\\s]+\"},\"cardType\":{\"type\":\"string\"},\"country\":{\"type\":\"string\",\"pattern\":\"^(A(D|E|F|G|I|L|M|N|O|R|S|T|Q|U|W|X|Z)|B(A|B|D|E|F|G|H|I|J|L|M|N|O|R|S|T|V|W|Y|Z)|C(A|C|D|F|G|H|I|K|L|M|N|O|R|U|V|X|Y|Z)|D(E|J|K|M|O|Z)|E(C|E|G|H|R|S|T)|F(I|J|K|M|O|R)|G(A|B|D|E|F|G|H|I|L|M|N|P|Q|R|S|T|U|W|Y)|H(K|M|N|R|T|U)|I(D|E|Q|L|M|N|O|R|S|T)|J(E|M|O|P)|K(E|G|H|I|M|N|P|R|W|Y|Z)|L(A|B|C|I|K|R|S|T|U|V|Y)|M(A|C|D|E|F|G|H|K|L|M|N|O|Q|P|R|S|T|U|V|W|X|Y|Z)|N(A|C|E|F|G|I|L|O|P|R|U|Z)|OM|P(A|E|F|G|H|K|L|M|N|R|S|T|W|Y)|QA|R(E|O|S|U|W)|S(A|B|C|D|E|G|H|I|J|K|L|M|N|O|R|T|V|Y|Z)|T(C|D|F|G|H|J|K|L|M|N|O|R|T|V|W|Z)|U(A|G|M|S|Y|Z)|V(A|C|E|G|I|N|U)|W(F|S)|Y(E|T)|Z(A|M|W))$\"},\"consentDateTime\":{\"type\":\"string\",\"pattern\":\"[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1]) (2[0-3]|[01][0-9]):[0-5][0-9]:[0-5][0-9]\"}},\"required\":[\"aliasType\",\"alias\",\"cardType\",\"country\",\"consentDateTime\",\"guid\",\"recipientLastName\",\"recipientFirstName\",\"issuerName\"]}",
                "type": "json"
            }
        ],
        "x": 410,
        "y": 320,
        "wires": [
            [
                "4fd869c8b618edd5"
            ]
        ]
    },
    {
        "id": "4d4d480fadc22978",
        "type": "catch",
        "z": "412669072e03744e",
        "name": "",
        "scope": null,
        "uncaught": false,
        "x": 120,
        "y": 540,
        "wires": [
            [
                "890a307b4d633211"
            ]
        ]
    },
    {
        "id": "8513a15eeda3a034",
        "type": "http response",
        "z": "412669072e03744e",
        "name": "",
        "statusCode": "201",
        "headers": {
            "content-type": "application/json"
        },
        "x": 1240,
        "y": 260,
        "wires": [],
        "icon": "font-awesome/fa-bank"
    },
    {
        "id": "fc57ea6402090e73",
        "type": "switch",
        "z": "412669072e03744e",
        "name": "error",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "200",
                "vt": "num"
            },
            {
                "t": "neq",
                "v": "200",
                "vt": "num"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 830,
        "y": 320,
        "wires": [
            [
                "8ab91041abef5398"
            ],
            [
                "ac3657e7afd769ed"
            ]
        ]
    },
    {
        "id": "ac3657e7afd769ed",
        "type": "function",
        "z": "412669072e03744e",
        "name": "throw error",
        "func": "const { message } = msg.payload;\n\nconst reasons = message ? message : 'unknown visa api error'; \nmsg.statusCode = 500;\nmsg.triggered = true;\nnode.error(`Alias wasn\\'t create, ${reasons}` , msg);",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1050,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "890a307b4d633211",
        "type": "subflow:d70e53f04ea4219d",
        "z": "412669072e03744e",
        "name": "",
        "x": 330,
        "y": 540,
        "wires": []
    },
    {
        "id": "4fd869c8b618edd5",
        "type": "subflow:a19c35db171e7c08",
        "z": "412669072e03744e",
        "name": "create alias",
        "env": [
            {
                "name": "resource",
                "value": "visaaliasdirectory/v1/manage/createalias",
                "type": "str"
            }
        ],
        "x": 630,
        "y": 320,
        "wires": [
            [
                "fc57ea6402090e73"
            ]
        ]
    },
    {
        "id": "8ab91041abef5398",
        "type": "change",
        "z": "412669072e03744e",
        "name": "set message",
        "rules": [
            {
                "t": "set",
                "p": "payload.message",
                "pt": "msg",
                "to": "Alias was create sccesfull",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1050,
        "y": 260,
        "wires": [
            [
                "8513a15eeda3a034"
            ]
        ]
    },
    {
        "id": "a9b2a57e9e4e1a7a",
        "type": "http in",
        "z": "0127f0442eaff100",
        "name": "[post] api/v1.0/transctions/p2p",
        "url": "api/v1.0/transctions/p2p",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 180,
        "y": 320,
        "wires": [
            [
                "c4894dd666641e9e"
            ]
        ]
    },
    {
        "id": "c4894dd666641e9e",
        "type": "subflow:3d8368539d02f074",
        "z": "0127f0442eaff100",
        "name": "",
        "env": [
            {
                "name": "schema",
                "value": "{\"type\":\"object\",\"properties\":{\"reciver\":{\"type\":\"object\",\"properties\":{\"alias\":{\"type\":\"string\",\"minLength\":9,\"maxLength\":15,\"pattern\":\"^[1-9]\\\\d{1,14}$\"},\"businessApplicationId\":{\"type\":\"string\",\"const\":\"PP\"}},\"required\":[\"businessApplicationId\",\"alias\"]},\"sender\":{\"type\":\"object\",\"properties\":{\"alias\":{\"type\":\"string\",\"minLength\":9,\"maxLength\":15,\"pattern\":\"^[1-9]\\\\d{1,14}$\"},\"businessApplicationId\":{\"type\":\"string\",\"const\":\"PP\"}},\"required\":[\"alias\",\"businessApplicationId\"]}},\"required\":[\"reciver\",\"sender\"]}",
                "type": "json"
            }
        ],
        "x": 480,
        "y": 320,
        "wires": [
            [
                "94d3e232468ed809"
            ]
        ]
    },
    {
        "id": "9690ad879729308e",
        "type": "catch",
        "z": "0127f0442eaff100",
        "name": "",
        "scope": null,
        "uncaught": false,
        "x": 120,
        "y": 460,
        "wires": [
            [
                "170eca90885ba555"
            ]
        ]
    },
    {
        "id": "170eca90885ba555",
        "type": "subflow:d70e53f04ea4219d",
        "z": "0127f0442eaff100",
        "name": "",
        "x": 310,
        "y": 460,
        "wires": []
    },
    {
        "id": "95a6269b84bb7837",
        "type": "inject",
        "z": "0127f0442eaff100",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"reciver\":{\"businessApplicationId\":\"PP\",\"alias\":\"380673335666\"},\"sender\":{\"businessApplicationId\":\"PP\",\"alias\":\"380673335667\"}}",
        "payloadType": "json",
        "x": 210,
        "y": 240,
        "wires": [
            [
                "c4894dd666641e9e"
            ]
        ]
    },
    {
        "id": "c9e3016dfa631c57",
        "type": "split",
        "z": "0127f0442eaff100",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "role",
        "x": 910,
        "y": 320,
        "wires": [
            [
                "83b96dca89d70abb"
            ]
        ]
    },
    {
        "id": "83b96dca89d70abb",
        "type": "subflow:a19c35db171e7c08",
        "z": "0127f0442eaff100",
        "name": "",
        "env": [
            {
                "name": "resource",
                "value": "visaaliasdirectory/v1/resolve",
                "type": "str"
            }
        ],
        "x": 1080,
        "y": 320,
        "wires": [
            [
                "c0e5d2ae430c9e6d"
            ]
        ]
    },
    {
        "id": "8cbf97951148ab45",
        "type": "subflow:a19c35db171e7c08",
        "z": "0127f0442eaff100",
        "name": "",
        "env": [
            {
                "name": "resource",
                "value": "visaaliasdirectory/v1/resolve",
                "type": "str"
            }
        ],
        "x": 2120,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "1c57d7d42ed6c25c",
        "type": "debug",
        "z": "0127f0442eaff100",
        "name": "debug 8",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1980,
        "y": 220,
        "wires": []
    },
    {
        "id": "804ba5cbdcd99679",
        "type": "function",
        "z": "0127f0442eaff100",
        "name": "function 2",
        "func": "const { id } = msg.parts;\n\nlet sequences = flow.get('sequences').get(id);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1840,
        "y": 300,
        "wires": [
            [
                "8cbf97951148ab45"
            ]
        ]
    },
    {
        "id": "6d490b55aa133820",
        "type": "function",
        "z": "0127f0442eaff100",
        "name": "throw error",
        "func": "const { message } = msg.payload;\n\nconst reasons = message ? message : 'unknown visa api error'; \nmsg.statusCode = 500;\nmsg.triggered = true;\nnode.error(`Alias wasn\\'t create, ${reasons}` , msg);",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1870,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "d98739bb2c059605",
        "type": "join",
        "z": "0127f0442eaff100",
        "name": "",
        "mode": "custom",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "role",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "num",
        "reduceFixup": "",
        "x": 1450,
        "y": 320,
        "wires": [
            [
                "015864eb24882e77"
            ]
        ]
    },
    {
        "id": "015864eb24882e77",
        "type": "function",
        "z": "0127f0442eaff100",
        "name": " handle error",
        "func": "const { reciver, sender } = msg.payload\n\nlet sequence = flow.get(msg.sequenceID);\nconst different = sequence.statusCodes.toString() != [200, 200].toString();\n\nif (different) return [null, msg];\nsequence.statusCodes.length = 0;\nreturn [msg, null]; ",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1630,
        "y": 320,
        "wires": [
            [
                "804ba5cbdcd99679",
                "b7015b947818d1cd"
            ],
            [
                "6d490b55aa133820"
            ]
        ]
    },
    {
        "id": "b7015b947818d1cd",
        "type": "debug",
        "z": "0127f0442eaff100",
        "name": "debug 15",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1780,
        "y": 220,
        "wires": []
    },
    {
        "id": "94d3e232468ed809",
        "type": "function",
        "z": "0127f0442eaff100",
        "name": "store sequence",
        "func": "const TOKEN_LENGTH = 16;\nconst ALPHA = 'abcdefghijklmnopqrstuvwxyz';\nconst DIGIT = '0123456789';\nconst ALPHA_DIGIT = ALPHA + DIGIT;\n\nconst base = ALPHA_DIGIT.length;\n\nmsg.sequenceID = '';\nfor (let i = 0; i < TOKEN_LENGTH; i++) {\n    const index = Math.floor(Math.random() * base);\n    msg.sequenceID += ALPHA_DIGIT[index];\n}\n\nflow.set(msg.sequenceID, { statusCodes: [] });\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 720,
        "y": 320,
        "wires": [
            [
                "c9e3016dfa631c57"
            ]
        ]
    },
    {
        "id": "c0e5d2ae430c9e6d",
        "type": "function",
        "z": "0127f0442eaff100",
        "name": "save codes",
        "func": "const sequence = flow.get(msg.sequenceID);\nsequence.statusCodes.push(msg.statusCode);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1270,
        "y": 320,
        "wires": [
            [
                "d98739bb2c059605"
            ]
        ]
    },
    {
        "id": "220eefac984ee0d1",
        "type": "subflow:f7abbef9ef4f4067",
        "z": "0127f0442eaff100",
        "name": "",
        "x": 1050,
        "y": 680,
        "wires": []
    },
    {
        "id": "8fd64b11611b52fa",
        "type": "subflow:a19c35db171e7c08",
        "z": "0127f0442eaff100",
        "name": "",
        "env": [
            {
                "name": "resource",
                "value": "pav/v1/cardvalidation",
                "type": "str"
            }
        ],
        "x": 820,
        "y": 420,
        "wires": [
            [
                "11da876084323c89"
            ]
        ]
    },
    {
        "id": "ecf5b3d76e2d4259",
        "type": "inject",
        "z": "0127f0442eaff100",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"cardAcceptor\":{\"address\":{\"country\":\"USA\",\"zipCode\":\"94404\",\"city\":\"San Francisco\",\"state\":\"CA\"},\"idCode\":\"408999\",\"name\":\"Visa Inc\"},\"cardExpiryDate\":\"2015-10\",\"cardCvv2Value\":\"111\",\"primaryAccountNumber\":\"9000000000002005\",\"addressVerificationResults\":{\"street\":\"Metro Center Blv\",\"postalCode\":\"94404\"}}",
        "payloadType": "json",
        "x": 590,
        "y": 420,
        "wires": [
            [
                "8fd64b11611b52fa"
            ]
        ]
    },
    {
        "id": "11da876084323c89",
        "type": "debug",
        "z": "0127f0442eaff100",
        "name": "debug 16",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1040,
        "y": 420,
        "wires": []
    }
]