const { errorCodes, status } = require('../enum');

/**
 * @param {Object} error
 * @param {number} [error.response.status]
 * @param {string} [error.response.data.message]
 * @param {string} [error.response.data.errorMessage]
 * @param {string} [error.response.data.responseStatus.message]
 * @param {string} [error.response.data.code]
 * @param {Object} [error.response.data]
 * @returns {Object}
 */
function visaErrorHandler(error) {
  if (!error.response) {
    return {
      status: status.INTERNAL_ERROR,
      errorCode: errorCodes.NODE_ERROR,
      message: 'This is a error in the node',
    };
  }
  // status 401
  if (error.response.status === status.ACCESS_ERROR) {
    return {
      status: status.ACCESS_ERROR,
      errorCode: errorCodes.ACCESS_ERROR,
      message: error.response.data.responseStatus.message,
    };
  }
  // handler bad body data
  // if response data have field errorMessage this mean that is validation error
  if (
    error.response.data.errorMessage ||
    error.response.status === status.BAD_REQUEST
  ) {
    return {
      status: error?.response.status,
      errorCode: error.response.data?.code || errorCodes.VALIDATION_ERROR,
      message: error.response.data.errorMessage || error.response.data.message,
    };
  }

  return {
    status: error.response.status,
    errorCode: error.response.data.code,
    message: error.response.data.message,
  };
}

module.exports = { visaErrorHandler };
